var searchIndex = {};
searchIndex['rustful_macros'] = {"items":[[0,"","rustful_macros","This crate provides some helpful macros for rustful, including `router!` and `routes!`."],[15,"content_type!","","A macro for assigning content types."]],"paths":[]};
searchIndex['rustful'] = {"items":[[0,"","rustful",""],[1,"Server","","Receives the HTTP requests and passes them on to handlers."],[11,"handlers","","A router with response handlers",0],[11,"port","","The port where the server will listen for requests",0],[11,"host","","Host address",0],[11,"server","","",0],[11,"content_type","","",0],[11,"cache","","",0],[11,"cache_clean_interval","","",0],[11,"last_cachel_clean","","",0],[11,"request_plugins","","",0],[1,"Request","","A container for all the request data, including get, set and path variables."],[11,"headers","","Headers from the HTTP request",1],[11,"method","","The HTTP method",1],[11,"path","","The requested path",1],[11,"variables","","Route variables",1],[11,"post","","POST variables",1],[11,"query","","Query variables from the path",1],[11,"fragment","","The fragment part of the URL (after #), if provided",1],[11,"body","","The raw body part of the request",1],[1,"Response","","An interface for sending HTTP response data to the client."],[11,"headers","","The HTTP response headers. Date, content type (text/plain) and server is automatically set.",2],[11,"status","","The HTTP response status. Ok (200) is default.",2],[11,"writer","","",2],[11,"started_writing","","",2],[2,"RequestResult","","The result from a `RequestPlugin`."],[12,"Continue","","Continue to the next plugin in the stack.",3],[12,"Abort","","Abort and send HTTP status.",3],[0,"router","","`Router` stores items, such as request handlers, using an HTTP method and a path as keys."],[1,"Router","rustful::router","Stores items, such as request handlers, using an HTTP method and a path as keys."],[11,"items","","",4],[11,"static_routes","","",4],[11,"variable_route","","",4],[11,"wildcard_route","","",4],[4,"RouterResult","",""],[10,"clone","","",4],[10,"new","","Creates an empty `Router`.",4],[10,"insert_item","","Inserts an item into the `Router` at a given path.",4],[10,"find","","Finds and returns the matching item and variables",4],[10,"from_routes","","Generates a `Router` tree from a set of items and paths.",4],[10,"insert_router","","Insert an other Router at a path. The content of the other Router will be merged with this one.\nContent with the same path and method will be overwritten.",4],[0,"cache","rustful","Utility traits and implementations for cached resources."],[1,"CachedFile","rustful::cache","Cached raw file content."],[11,"path","","",5],[11,"file","","",5],[11,"modified","","",5],[11,"last_accessed","","",5],[11,"unused_after","","",5],[1,"CachedProcessedFile","","A processed cached file."],[11,"path","","",6],[11,"file","","",6],[11,"modified","","",6],[11,"last_accessed","","",6],[11,"unused_after","","",6],[11,"processor","","",6],[6,"CachedValue","","This trait provides functions for handling cached resources."],[9,"use_current_value","","`do_this` with the cached value, without loading or reloading it.",7],[9,"load","","Load the cached value.",7],[9,"free","","Free the cached value.",7],[9,"expired","","Check if the cached value has expired.",7],[9,"unused","","Check if the cached value is unused and should be removed.",7],[10,"use_value","","Reload the cached value if it has expired and `do_this` with it.",7],[10,"clean","","Free the cached value if it's unused.",7],[10,"new","","Creates a new `CachedFile` which will be freed `unused_after` seconds after the latest access.",5],[10,"use_current_value","","",5],[10,"load","","",5],[10,"free","","",5],[10,"expired","","",5],[10,"unused","","",5],[10,"new","","Creates a new `CachedProcessedFile` which will be freed `unused_after` seconds after the latest access.\nThe file will be processed by the provided `processor` function each time it's loaded.",6],[10,"use_current_value","","",6],[10,"load","","",6],[10,"free","","",6],[10,"expired","","",6],[10,"unused","","",6],[6,"Handler","rustful","A trait for request handlers."],[9,"handle_request","","",8],[6,"Cache","","A trait for cache storage."],[9,"free_unused","","Free all the unused cached resources.",9],[6,"RequestPlugin","","A trait for request plugins."],[9,"modify","","Try to modify the `Request`.",10],[10,"new","","Create a new `Server` which will listen on the provided port and host address `0.0.0.0`.",0],[10,"with_cache","","Creates a new `Server` with a resource cache.",0],[10,"run","","Start the server and run forever.\nThis will only return if the initial connection fails.",0],[10,"set_host","","Change the host address.",0],[10,"set_clean_interval","","Set the minimal number of seconds between each cache clean.",0],[10,"set_server_name","","Change the server part of the user agent string.",0],[10,"set_content_type","","Change the default content type.",0],[10,"add_request_plugin","","Add a request plugin to the plugin stack.",0],[10,"get_config","","",0],[10,"handle_request","","",0],[10,"clone","","",0],[10,"new","","",2],[10,"send","","Writes a string or any other `BytesContainer` to the client.\nThe headers will be written the first time `send()` is called.",2],[10,"begin","","Start writing the response. Headers and status can not be changed after it has been called.",2],[10,"end","","Finish writing the response.",2],[10,"write","","",2]],"paths":[[1,"Server"],[1,"Request"],[1,"Response"],[2,"RequestResult"],[1,"Router"],[1,"CachedFile"],[1,"CachedProcessedFile"],[6,"CachedValue"],[6,"Handler"],[6,"Cache"],[6,"RequestPlugin"]]};

initSearch(searchIndex);
