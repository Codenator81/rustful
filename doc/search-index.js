var searchIndex = {};
searchIndex['rustful'] = {"items":[[0,"","rustful",""],[0,"mime","",""],[11,"fmt","mime","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"fmt","","",1],[11,"clone","","",1],[11,"eq","","",1],[11,"fmt","","",1],[6,"Err","rustful::mime",""],[11,"from_str","mime","",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"eq","","",2],[11,"fmt","","",2],[6,"Err","rustful::mime",""],[11,"from_str","mime","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"eq","","",3],[11,"fmt","","",3],[6,"Err","rustful::mime",""],[11,"from_str","mime","",3],[11,"fmt","","",4],[11,"clone","","",4],[11,"eq","","",4],[11,"fmt","","",4],[6,"Err","rustful::mime",""],[11,"from_str","mime","",4],[11,"fmt","","",0],[6,"Err","rustful::mime",""],[11,"from_str","mime","",0],[3,"Mime","rustful::mime","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",1],[13,"Text","","",1],[13,"Image","","",1],[13,"Audio","","",1],[13,"Video","","",1],[13,"Application","","",1],[13,"Multipart","","",1],[13,"Message","","",1],[13,"Model","","",1],[13,"Ext","","",1],[4,"SubLevel","",""],[13,"Star","","",2],[13,"Plain","","",2],[13,"Html","","",2],[13,"Xml","","",2],[13,"Javascript","","",2],[13,"Css","","",2],[13,"Json","","",2],[13,"WwwFormUrlEncoded","","",2],[13,"FormData","","",2],[13,"Png","","",2],[13,"Gif","","",2],[13,"Bmp","","",2],[13,"Jpeg","","",2],[13,"Ext","","",2],[4,"Attr","",""],[13,"Charset","","",3],[13,"Q","","",3],[13,"Ext","","",3],[4,"Value","",""],[13,"Utf8","","",4],[13,"Ext","","",4],[6,"Param","",""],[11,"safe","hyper::method","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",5],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",5],[11,"headers","hyper::client::request","Read the Request headers.",6],[11,"method","","Read the Request method.",6],[11,"new","","Create a new client request.",6],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",6],[11,"headers_mut","","Get a mutable reference to the Request headers.",6],[11,"send","","Completes writing the request, and returns a response to read from.",6],[11,"write","","",6],[11,"flush","","",6],[11,"new","hyper::client::response","Creates a new response from a server.",7],[11,"status_raw","","Get the raw status code and reason.",7],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",7],[11,"read","","",7],[11,"new","hyper::client","Create a new Client.",8],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",8],[11,"with_connector","","Create a new client with a specific connector.",8],[11,"set_redirect_policy","","Set the RedirectPolicy.",8],[11,"get","","Execute a Get request.",8],[11,"head","","Execute a Head request.",8],[11,"post","","Execute a Post request.",8],[11,"put","","Execute a Put request.",8],[11,"delete","","Execute a Delete request.",8],[11,"request","","Build a new request using this Client.",8],[11,"body","","Set a request body to be sent.",9],[11,"headers","","Add additional headers to the request.",9],[11,"header","","Add an individual new header to the request.",9],[11,"send","","Execute this request and receive a Response back.",9],[11,"read","","",10],[11,"into_body","","",10],[11,"into_url","url","",11],[11,"clone","hyper::client","",12],[11,"default","","",12],[11,"fmt","hyper::method","",5],[11,"hash","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"clone","","",5],[6,"Err","rustful",""],[11,"from_str","hyper::method","",5],[11,"fmt","","",5],[11,"fmt","hyper::header::common::access_control::allow_headers","",13],[11,"eq","","",13],[11,"ne","","",13],[11,"clone","","",13],[11,"header_name","","",13],[11,"parse_header","","",13],[11,"fmt_header","","",13],[11,"fmt","hyper::header::common::access_control::allow_methods","",14],[11,"eq","","",14],[11,"ne","","",14],[11,"clone","","",14],[11,"header_name","","",14],[11,"parse_header","","",14],[11,"fmt_header","","",14],[11,"fmt","hyper::header::common::access_control::allow_origin","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"clone","","",15],[11,"header_name","","",15],[11,"parse_header","","",15],[11,"fmt_header","","",15],[11,"fmt","hyper::header::common::access_control::max_age","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"header_name","","",16],[11,"parse_header","","",16],[11,"fmt_header","","",16],[11,"fmt","hyper::header::common::access_control::request_headers","",17],[11,"eq","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"header_name","","",17],[11,"parse_header","","",17],[11,"fmt_header","","",17],[11,"fmt","hyper::header::common::access_control::request_method","",18],[11,"eq","","",18],[11,"ne","","",18],[11,"clone","","",18],[11,"header_name","","",18],[11,"parse_header","","",18],[11,"fmt_header","","",18],[11,"fmt","hyper::header::common::accept","",19],[11,"eq","","",19],[11,"ne","","",19],[11,"clone","","",19],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept","",19],[11,"deref_mut","","",19],[11,"header_name","","",19],[11,"parse_header","","",19],[11,"fmt_header","","",19],[11,"fmt","","",19],[11,"fmt","hyper::header::common::accept_charset","",20],[11,"eq","","",20],[11,"ne","","",20],[11,"clone","","",20],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept_charset","",20],[11,"deref_mut","","",20],[11,"header_name","","",20],[11,"parse_header","","",20],[11,"fmt_header","","",20],[11,"fmt","","",20],[11,"fmt","hyper::header::common::accept_encoding","",21],[11,"eq","","",21],[11,"ne","","",21],[11,"clone","","",21],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept_encoding","",21],[11,"deref_mut","","",21],[11,"header_name","","",21],[11,"parse_header","","",21],[11,"fmt_header","","",21],[11,"fmt","","",21],[11,"fmt","hyper::header::common::accept_language","",22],[11,"eq","","",22],[11,"ne","","",22],[11,"clone","","",22],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::accept_language","",22],[11,"fmt","","",22],[11,"fmt","","",23],[11,"eq","","",23],[11,"ne","","",23],[11,"clone","","",23],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept_language","",23],[11,"deref_mut","","",23],[11,"header_name","","",23],[11,"parse_header","","",23],[11,"fmt_header","","",23],[11,"fmt","","",23],[11,"fmt","hyper::header::common::allow","",24],[11,"eq","","",24],[11,"ne","","",24],[11,"clone","","",24],[6,"Target","rustful",""],[11,"deref","hyper::header::common::allow","",24],[11,"deref_mut","","",24],[11,"header_name","","",24],[11,"parse_header","","",24],[11,"fmt_header","","",24],[11,"fmt","","",24],[11,"fmt","hyper::header::common::authorization","",25],[11,"eq","","",25],[11,"ne","","",25],[11,"clone","","",25],[6,"Target","rustful",""],[11,"deref","hyper::header::common::authorization","",25],[11,"deref_mut","","",25],[11,"header_name","","",25],[11,"parse_header","","",25],[11,"fmt_header","","",25],[11,"scheme","collections::string","",26],[11,"fmt_scheme","","",26],[11,"fmt","hyper::header::common::authorization","",27],[11,"eq","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"scheme","","",27],[11,"fmt_scheme","","",27],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::authorization","",27],[11,"fmt","hyper::header::common::cache_control","",28],[11,"clone","","",28],[11,"eq","","",28],[11,"ne","","",28],[6,"Target","rustful",""],[11,"deref","hyper::header::common::cache_control","",28],[11,"deref_mut","","",28],[11,"header_name","","",28],[11,"parse_header","","",28],[11,"fmt_header","","",28],[11,"fmt","","",29],[11,"clone","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"fmt","","",29],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::cache_control","",29],[11,"fmt","hyper::header::common::cookie","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"clone","","",30],[6,"Target","rustful",""],[11,"deref","hyper::header::common::cookie","",30],[11,"deref_mut","","",30],[11,"header_name","","",30],[11,"parse_header","","",30],[11,"fmt_header","","",30],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",30],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",30],[11,"fmt","hyper::header::common::connection","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"clone","","",31],[6,"Target","rustful",""],[11,"deref","hyper::header::common::connection","",31],[11,"deref_mut","","",31],[11,"fmt","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"clone","","",32],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::connection","",32],[11,"fmt","","",32],[11,"header_name","","",31],[11,"parse_header","","",31],[11,"fmt_header","","",31],[11,"fmt","hyper::header::common::content_length","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"clone","","",33],[6,"Target","rustful",""],[11,"deref","hyper::header::common::content_length","",33],[11,"deref_mut","","",33],[11,"header_name","","",33],[11,"parse_header","","",33],[11,"fmt_header","","",33],[11,"fmt","","",33],[11,"fmt","hyper::header::common::content_type","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"clone","","",34],[6,"Target","rustful",""],[11,"deref","hyper::header::common::content_type","",34],[11,"deref_mut","","",34],[11,"header_name","","",34],[11,"parse_header","","",34],[11,"fmt_header","","",34],[11,"fmt","","",34],[11,"fmt","hyper::header::common::date","",35],[11,"clone","","",35],[11,"eq","","",35],[11,"ne","","",35],[6,"Target","rustful",""],[11,"deref","hyper::header::common::date","",35],[11,"deref_mut","","",35],[11,"header_name","","",35],[11,"parse_header","","",35],[11,"fmt_header","","",35],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::date","",35],[11,"fmt","hyper::header::common::etag","",36],[11,"eq","","",36],[11,"ne","","",36],[11,"clone","","",36],[6,"Target","rustful",""],[11,"deref","hyper::header::common::etag","",36],[11,"deref_mut","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[11,"fmt","hyper::header::common::expires","",37],[11,"clone","","",37],[11,"eq","","",37],[11,"ne","","",37],[6,"Target","rustful",""],[11,"deref","hyper::header::common::expires","",37],[11,"deref_mut","","",37],[11,"header_name","","",37],[11,"parse_header","","",37],[11,"fmt_header","","",37],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::expires","",37],[11,"fmt","hyper::header::common::host","",38],[11,"eq","","",38],[11,"ne","","",38],[11,"clone","","",38],[11,"header_name","","",38],[11,"parse_header","","",38],[11,"fmt_header","","",38],[11,"fmt","hyper::header::common::if_match","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","hyper::header::common::last_modified","",40],[11,"clone","","",40],[11,"eq","","",40],[11,"ne","","",40],[6,"Target","rustful",""],[11,"deref","hyper::header::common::last_modified","",40],[11,"deref_mut","","",40],[11,"header_name","","",40],[11,"parse_header","","",40],[11,"fmt_header","","",40],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::last_modified","",40],[11,"fmt","hyper::header::common::if_modified_since","",41],[11,"clone","","",41],[11,"eq","","",41],[11,"ne","","",41],[6,"Target","rustful",""],[11,"deref","hyper::header::common::if_modified_since","",41],[11,"deref_mut","","",41],[11,"header_name","","",41],[11,"parse_header","","",41],[11,"fmt_header","","",41],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::if_modified_since","",41],[11,"fmt","hyper::header::common::if_none_match","",42],[11,"eq","","",42],[11,"ne","","",42],[11,"clone","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[11,"fmt","hyper::header::common::if_unmodified_since","",43],[11,"clone","","",43],[11,"eq","","",43],[11,"ne","","",43],[6,"Target","rustful",""],[11,"deref","hyper::header::common::if_unmodified_since","",43],[11,"deref_mut","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::if_unmodified_since","",43],[11,"fmt","hyper::header::common::location","",44],[11,"eq","","",44],[11,"ne","","",44],[11,"clone","","",44],[6,"Target","rustful",""],[11,"deref","hyper::header::common::location","",44],[11,"deref_mut","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[11,"fmt","","",44],[11,"fmt","hyper::header::common::pragma","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"clone","","",45],[11,"header_name","","",45],[11,"parse_header","","",45],[11,"fmt_header","","",45],[11,"fmt","hyper::header::common::referer","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"clone","","",46],[6,"Target","rustful",""],[11,"deref","hyper::header::common::referer","",46],[11,"deref_mut","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"fmt","","",46],[11,"fmt","hyper::header::common::server","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"clone","","",47],[6,"Target","rustful",""],[11,"deref","hyper::header::common::server","",47],[11,"deref_mut","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",47],[11,"fmt","hyper::header::common::set_cookie","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"clone","","",48],[6,"Target","rustful",""],[11,"deref","hyper::header::common::set_cookie","",48],[11,"deref_mut","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",48],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",48],[11,"fmt","hyper::header::common::transfer_encoding","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"clone","","",49],[6,"Target","rustful",""],[11,"deref","hyper::header::common::transfer_encoding","",49],[11,"deref_mut","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"fmt","","",49],[11,"fmt","hyper::header::common::upgrade","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"clone","","",50],[6,"Target","rustful",""],[11,"deref","hyper::header::common::upgrade","",50],[11,"deref_mut","","",50],[11,"fmt","","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"clone","","",51],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::upgrade","",51],[11,"fmt","","",51],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","hyper::header::common::user_agent","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"clone","","",52],[6,"Target","rustful",""],[11,"deref","hyper::header::common::user_agent","",52],[11,"deref_mut","","",52],[11,"header_name","","",52],[11,"parse_header","","",52],[11,"fmt_header","","",52],[11,"fmt","","",52],[11,"fmt","hyper::header::common::vary","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"clone","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"new","hyper::header::internals::cell","",54],[11,"set","","",54],[11,"get_mut","","",54],[6,"Target","rustful",""],[11,"deref","hyper::header::internals::cell","",54],[11,"clone","","",54],[11,"fmt","","",55],[11,"clone","","",55],[11,"new","","",56],[11,"get","","",56],[11,"get_mut","","",56],[11,"insert","","",56],[11,"one","","",56],[11,"clone","","",56],[11,"clone","hyper::header::internals::item","",57],[11,"new_raw","","",57],[11,"new_typed","","",57],[11,"mut_raw","","",57],[11,"raw","","",57],[11,"typed","","",57],[11,"typed_mut","","",57],[11,"fmt","","",57],[11,"eq","hyper::header::shared::charset","",58],[11,"ne","","",58],[11,"fmt","","",58],[11,"clone","","",58],[11,"fmt","","",58],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::charset","",58],[11,"fmt","hyper::header::shared::encoding","",59],[11,"eq","","",59],[11,"ne","","",59],[11,"clone","","",59],[11,"fmt","","",59],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::encoding","",59],[11,"fmt","hyper::header::shared::entity","",60],[11,"eq","","",60],[11,"ne","","",60],[11,"clone","","",60],[11,"fmt","","",60],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::entity","",60],[11,"partial_cmp","hyper::header::shared::quality_item","",61],[11,"lt","","",61],[11,"le","","",61],[11,"gt","","",61],[11,"ge","","",61],[11,"eq","","",61],[11,"ne","","",61],[11,"cmp","","",61],[11,"fmt","","",61],[11,"clone","","",61],[11,"fmt","","",61],[11,"from_i64","","",61],[11,"from_u64","","",61],[11,"from_f64","","",61],[11,"to_i64","","",61],[11,"to_u64","","",61],[11,"to_f64","","",61],[11,"default","","",61],[11,"fmt","","",62],[11,"eq","","",62],[11,"ne","","",62],[11,"clone","","",62],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",62],[11,"partial_cmp","","",62],[11,"fmt","","",62],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::quality_item","",62],[11,"clone","alloc::boxed","",63],[11,"clone","hyper::header","",64],[11,"new","","Creates a new, empty headers map.",64],[11,"set","","Set a header field to the corresponding value.",64],[11,"get_raw","","Access the raw value of a header.",64],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",64],[11,"remove_raw","","Remove a header set by set_raw",64],[11,"get","","Get a reference to the header field's value, if it exists.",64],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",64],[11,"has","","Returns a boolean of whether a certain header is in the map.",64],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",64],[11,"iter","","Returns an iterator over the header fields.",64],[11,"len","","Returns the number of headers in the map.",64],[11,"clear","","Remove all headers from the map.",64],[11,"fmt","","",64],[11,"fmt","","",64],[6,"Item","rustful",""],[11,"next","hyper::header","",65],[11,"is","","Check if a HeaderView is a certain Header.",66],[11,"name","","Get the Header name as a slice.",66],[11,"value","","Cast the value to a certain Header type.",66],[11,"value_string","","Get just the header value as a String.",66],[11,"fmt","","",66],[11,"fmt","","",66],[11,"extend","","",64],[11,"from_iter","","",64],[11,"fmt","","",67],[11,"fmt","","",67],[11,"into_inner","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",68],[11,"read","","",68],[11,"into_inner","","Unwraps the HttpWriter and returns the underlying Writer.",69],[11,"get_ref","","Access the inner Writer.",69],[11,"get_mut","","Access the inner Writer mutably.",69],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",69],[11,"write","","",69],[11,"flush","","",69],[11,"fmt","","",70],[11,"eq","","",70],[11,"ne","","",70],[11,"clone","","",70],[6,"Item","rustful",""],[11,"next","hyper::net","",71],[11,"fmt","alloc::boxed","",63],[11,"clone","","",63],[11,"is","","Is the underlying type in this trait object a T?",72],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",72],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",72],[11,"downcast","","If the underlying type is T, extract it.",72],[11,"clone","hyper::net","",73],[11,"http","","Start listening to an address over HTTP.",73],[11,"https","","Start listening to an address over HTTPS.",73],[6,"Stream","rustful",""],[11,"accept","hyper::net","",73],[11,"socket_addr","","",73],[11,"clone","","",74],[11,"read","","",74],[11,"write","","",74],[11,"flush","","",74],[11,"clone","","",75],[11,"read","","",75],[11,"write","","",75],[11,"flush","","",75],[11,"peer_addr","","",75],[6,"Stream","rustful",""],[11,"connect","hyper::net","",76],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",77],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",77],[11,"read","","",77],[11,"status","hyper::server::response","The status of this response.",78],[11,"headers","","The headers of this response.",78],[11,"construct","","Construct a Response from its constituent parts.",78],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",78],[11,"new","","Creates a new Response that can be used to write to a network stream.",78],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",78],[11,"status_mut","","Get a mutable reference to the status.",78],[11,"headers_mut","","Get a mutable reference to the Headers.",78],[11,"end","","Flushes all writing of a response to the client.",78],[11,"write","","",78],[11,"flush","","",78],[11,"new","hyper::server::listener","Create a thread pool to manage the acceptor.",79],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",79],[11,"drop","","",80],[11,"new","hyper::server","",81],[11,"http","","Creates a new server that will handle `HttpStream`s.",81],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",81],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",81],[11,"listen","","Binds to a socket and starts handling connections.",81],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",81],[11,"close","","Stop the server from listening to its socket address.",82],[11,"canonical_reason","hyper::status","Get the standardised `reason-phrase` for this status code.",83],[11,"class","","Determine the class of a status code, based on its first digit.",83],[11,"is_informational","","Check if class is Informational.",83],[11,"is_success","","Check if class is Success.",83],[11,"is_redirection","","Check if class is Redirection.",83],[11,"is_client_error","","Check if class is ClientError.",83],[11,"is_server_error","","Check if class is ServerError.",83],[11,"is_strange_status","","Check if class is NoClass",83],[11,"fmt","","",83],[11,"fmt","","",83],[11,"eq","","",83],[11,"clone","","",83],[11,"from_i64","","",83],[11,"from_u64","","",83],[11,"partial_cmp","","",83],[11,"cmp","","",83],[11,"to_i64","","",83],[11,"to_u64","","",83],[11,"cmp","","",84],[11,"partial_cmp","","",84],[11,"lt","","",84],[11,"le","","",84],[11,"gt","","",84],[11,"ge","","",84],[11,"eq","","",84],[11,"ne","","",84],[11,"clone","","",84],[11,"default_code","","Get the default status code for the class.",84],[11,"to_i64","","",84],[11,"to_u64","","",84],[11,"clone","hyper::uri","",85],[11,"eq","","",85],[11,"ne","","",85],[11,"fmt","","",85],[11,"fmt","hyper::version","",86],[11,"partial_cmp","","",86],[11,"lt","","",86],[11,"le","","",86],[11,"gt","","",86],[11,"ge","","",86],[11,"eq","","",86],[11,"ne","","",86],[11,"fmt","","",86],[11,"clone","hyper","",87],[11,"eq","","",87],[11,"ne","","",87],[11,"fmt","","",87],[11,"fmt","","",87],[11,"description","","",87],[11,"cause","","",87],[11,"from_error","","",87],[11,"from_error","","",87],[4,"Method","rustful","The Request Method (VERB)"],[13,"Options","","OPTIONS",5],[13,"Get","","GET",5],[13,"Post","","POST",5],[13,"Put","","PUT",5],[13,"Delete","","DELETE",5],[13,"Head","","HEAD",5],[13,"Trace","","TRACE",5],[13,"Connect","","CONNECT",5],[13,"Patch","","PATCH",5],[13,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",5],[4,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.)."],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",83],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",83],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",83],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",83],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",83],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",83],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",83],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",83],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",83],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",83],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",83],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",83],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",83],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",83],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",83],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",83],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",83],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",83],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",83],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",83],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",83],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",83],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",83],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",83],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",83],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",83],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",83],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",83],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",83],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",83],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",83],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",83],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",83],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",83],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",83],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",83],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",83],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",83],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",83],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",83],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",83],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",83],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",83],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",83],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",83],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",83],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",83],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",83],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",83],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",83],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",83],[0,"header","","Headers container, and common header fields."],[0,"parsing","rustful::header","Utility functions for Header implementations."],[5,"from_one_raw_str","rustful::header::parsing","Reads a single raw string when parsing a header"],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[5,"tm_from_str","","Get a Tm from HTTP date formats."],[8,"Header","rustful::header","A trait for any object that will represent a header field and value."],[10,"header_name","","Returns the name of the header field this belongs to.",88],[10,"parse_header","","Parse a header from a raw stream of bytes.",88],[8,"HeaderFormat","","A trait for any object that will represent a header field and value."],[10,"fmt_header","","Format a header to be output into a TcpStream.",89],[3,"Headers","","A map of header fields on requests and responses."],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[3,"HeaderView","","Returned with the `HeadersItems` iterator."],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header."],[3,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[4,"IfNoneMatch","","The `If-None-Match` header defined by HTTP/1.1."],[13,"Any","","This corresponds to '*'.",42],[13,"EntityTags","","The header field names which will influence the response representation.",42],[3,"Connection","","The `Connection` header."],[4,"Protocol","","Protocol values that can appear in the Upgrade header."],[13,"WebSocket","","The websocket protocol.",51],[13,"ProtocolExt","","Some other less common protocol.",51],[3,"IfModifiedSince","","The `If-Modified-Since` header field."],[3,"AcceptCharset","","The `Accept-Charset` header"],[4,"Charset","","A Mime charset."],[13,"Us_Ascii","","US ASCII",58],[13,"Iso_8859_1","","ISO-8859-1",58],[13,"Iso_8859_2","","ISO-8859-2",58],[13,"Iso_8859_3","","ISO-8859-3",58],[13,"Iso_8859_4","","ISO-8859-4",58],[13,"Iso_8859_5","","ISO-8859-5",58],[13,"Iso_8859_6","","ISO-8859-6",58],[13,"Iso_8859_7","","ISO-8859-7",58],[13,"Iso_8859_8","","ISO-8859-8",58],[13,"Iso_8859_9","","ISO-8859-9",58],[13,"Iso_8859_10","","ISO-8859-10",58],[13,"Shift_Jis","","Shift_JIS",58],[13,"Euc_Jp","","EUC-JP",58],[13,"Iso_2022_Kr","","ISO-2022-KR",58],[13,"Euc_Kr","","EUC-KR",58],[13,"Iso_2022_Jp","","ISO-2022-JP",58],[13,"Iso_2022_Jp_2","","ISO-2022-JP-2",58],[13,"Iso_8859_6_E","","ISO-8859-6-E",58],[13,"Iso_8859_6_I","","ISO-8859-6-I",58],[13,"Iso_8859_8_E","","ISO-8859-8-E",58],[13,"Iso_8859_8_I","","ISO-8859-8-I",58],[13,"Gb2312","","GB2312",58],[13,"Big5","","Big5",58],[13,"Koi8_R","","KOI8-R",58],[13,"Ext","","An arbitrary charset specified as a string",58],[3,"Server","","The `Server` header field."],[8,"Scheme","","An Authorization scheme to be used in the header."],[10,"scheme","","An optional Scheme name.",90],[10,"fmt_scheme","","Format the Scheme data into a header value.",90],[4,"CacheDirective","","CacheControl contains a list of these directives."],[13,"NoCache","","\"no-cache\"",29],[13,"NoStore","","\"no-store\"",29],[13,"NoTransform","","\"no-transform\"",29],[13,"OnlyIfCached","","\"only-if-cached\"",29],[13,"MaxAge","","\"max-age=delta\"",29],[13,"MaxStale","","\"max-stale=delta\"",29],[13,"MinFresh","","\"min-fresh=delta\"",29],[13,"MustRevalidate","","\"must-revalidate\"",29],[13,"Public","","\"public\"",29],[13,"Private","","\"private\"",29],[13,"ProxyRevalidate","","\"proxy-revalidate\"",29],[13,"SMaxAge","","\"s-maxage=delta\"",29],[13,"Extension","","Extension directives. Optionally include an argument.",29],[3,"Basic","","Credential holder for Basic Authentication"],[12,"username","","The username as a possibly empty string",27],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",27],[3,"EntityTag","","An entity tag"],[12,"weak","","Weakness indicator for the tag",60],[12,"tag","","The opaque string in between the DQUOTEs",60],[3,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"TransferEncoding","","The `Transfer-Encoding` header."],[5,"q","","Convenience function to create a `Quality` fromt a float."],[3,"Referer","","The `Referer` header."],[3,"Etag","","The `Etag` header."],[3,"ContentType","","The `Content-Type` header."],[4,"IfMatch","","The `If-Match` header"],[13,"Any","","This corresponds to '*'.",39],[13,"EntityTags","","The header field names which will influence the response representation.",39],[3,"Expires","","The `Expires` header field."],[3,"Accept","","The `Accept` header."],[3,"Host","","The `Host` header."],[12,"hostname","","The hostname, such a example.domain.",38],[12,"port","","An optional port number.",38],[3,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[12,"item","","The actual contents of the field.",62],[12,"quality","","The quality (client or server preference) for the value.",62],[3,"SetCookie","","The `Set-Cookie` header"],[4,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[13,"Any","","This corresponds to '*'.",53],[13,"Headers","","The header field names which will influence the response representation.",53],[3,"AcceptLanguage","","The `Accept-Language` header"],[3,"Location","","The `Location` header."],[4,"ConnectionOption","","Values that can be in the `Connection` header."],[13,"KeepAlive","","The `keep-alive` connection value.",32],[13,"Close","","The `close` connection value.",32],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",32],[3,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Authorization","","The `Authorization` header field."],[3,"Date","","The `Date` header field."],[3,"ContentLength","","The `Content-Length` header."],[3,"Quality","","Represents a quality used in quality values."],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[13,"AllowStar","","Allow all origins",15],[13,"AllowOrigin","","Allow one particular origin",15],[3,"Upgrade","","The `Upgrade` header."],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0."],[13,"NoCache","","Corresponds to the `no-cache` value.",45],[13,"Ext","","Every value other than `no-cache`.",45],[3,"Cookie","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[3,"LastModified","","The `LastModified` header field."],[3,"CacheControl","","The Cache-Control header."],[3,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[3,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[13,"Chunked","","The `chunked` encoding.",59],[13,"Gzip","","The `gzip` encoding.",59],[13,"Deflate","","The `deflate` encoding.",59],[13,"Compress","","The `compress` encoding.",59],[13,"Identity","","The `identity` encoding.",59],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",59],[3,"IfUnmodifiedSince","","The `If-Unmodified-Since` header field."],[3,"UserAgent","","The `User-Agent` header field."],[3,"AcceptEncoding","","The `Accept-Encoding` header"],[6,"HttpResult","rustful",""],[4,"HttpError","","A set of errors that can occur parsing HTTP streams."],[13,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",87],[13,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",87],[13,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",87],[13,"HttpHeaderError","","An invalid `Header`.",87],[13,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",87],[13,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",87],[4,"Scheme","","HTTP or HTTPS"],[13,"Http","","Standard HTTP.",91],[13,"Https","","HTTP with SSL encryption.",91],[12,"cert","rustful::Scheme","Path to SSL certificate.",91],[12,"key","","Path to key file.",91],[0,"server","rustful","Server configuration and instance."],[3,"Listening","rustful::server","A listening server, which can later be closed."],[12,"socket","","The socket addresses that the server is bound to.",82],[3,"Server","","Used to build and run a server."],[12,"handlers","","One or several response handlers.",92],[12,"port","","The port where the server will listen for requests.",92],[12,"host","","The host address where the server will listen for requests.",92],[12,"protocol","","The type of HTTP protocol.",92],[12,"threads","","The number of threads to be used in the server task pool.\nThe default (`None`) is based on recommendations from the system.",92],[12,"server","","The content of the server header.",92],[12,"content_type","","The default media type.",92],[12,"cache","","A structure where resources are cached.",92],[12,"cache_clean_interval","","How often the cache should be cleaned. Measured in seconds.",92],[12,"log","","Tool for printing to a log.",92],[12,"context_plugins","","The context plugin stack.",92],[12,"response_plugins","","The response plugin stack.",92],[3,"ServerInstance","","A runnable instance of a server."],[11,"new","","Create a new empty server which will listen on host address `0.0.0.0` and port `80`.",92],[11,"with_cache","","Create a new empty server with a cache.",92],[11,"handlers","","Set request handlers.",92],[11,"port","","Change the port. Default is `80`.",92],[11,"host","","Change the host address. Default is `0.0.0.0`.",92],[11,"https","","Change the protocol to HTTPS.",92],[11,"threads","","Set the number of threads to be used in the server task pool.",92],[11,"cache_clean_interval","","Set the minimal number of seconds between each cache clean.",92],[11,"server_name","","Change the server response header. Default is `rustful`.",92],[11,"content_type","","Change the default content type. Default is `text/plain`.",92],[11,"log","","Change log tool. Default is to print to standard output.",92],[11,"with_context_plugin","","Add a context plugin to the plugin stack.",92],[11,"with_response_plugin","","Add a response plugin to the plugin stack.",92],[11,"run","","Start the server.",92],[11,"build","","Build a runnable instance of the server.",92],[11,"handle","","",93],[0,"router","rustful","Routers stores request handlers, using an HTTP method and a path as keys."],[3,"TreeRouter","rustful::router","Stores items, such as request handlers, using an HTTP method and a path as keys."],[6,"RouterResult","",""],[8,"Router","","Routers are used to store request handlers."],[16,"Handler","rustful::router::Router",""],[10,"find","rustful::router","Find and return the matching handler and variable values.",94],[10,"insert","","Insert a new handler into the router.",94],[6,"Handler","",""],[11,"clone","","",95],[11,"new","","Creates an empty `TreeRouter`.",95],[11,"from_routes","","Generates a `TreeRouter` tree from a set of items and paths.",95],[6,"Handler","",""],[11,"find","","",95],[11,"insert","","Inserts an item into the `TreeRouter` at a given path.",95],[11,"insert_router","","Insert an other TreeRouter at a path. The content of the other TreeRouter will be merged with this one.\nContent with the same path and method will be overwritten.",95],[0,"handler","rustful","Request handlers."],[8,"Handler","rustful::handler","A trait for request handlers."],[16,"Cache","rustful::handler::Handler",""],[10,"handle_request","rustful::handler","",96],[6,"Cache","",""],[0,"cache","rustful","Traits and implementations for cached resources."],[3,"CachedFile","rustful::cache","Cached raw file content."],[3,"CachedProcessedFile","","A processed cached file."],[8,"Cache","","A trait for cache storage."],[10,"free_unused","","Free all the unused cached resources.",97],[8,"CachedValue","","This trait provides functions for handling cached resources."],[10,"borrow_current","","Borrow the cached value, without loading or reloading it.",98],[10,"load","","Load the cached value.",98],[10,"free","","Free the cached value.",98],[10,"expired","","Check if the cached value has expired.",98],[10,"unused","","Check if the cached value is unused and should be removed.",98],[11,"borrow","","Reload the cached value if it has expired and borrow it.",98],[11,"clean","","Free the cached value if it's unused.",98],[11,"new","","Creates a new `CachedFile` which will be freed `unused_after` seconds after the latest access.",99],[11,"borrow_current","","",99],[11,"load","","",99],[11,"free","","",99],[11,"expired","","",99],[11,"unused","","",99],[11,"new","","Creates a new `CachedProcessedFile` which will be freed `unused_after` seconds after the latest access.\nThe file will be processed by the provided `processor` function each time it's loaded.",100],[11,"borrow_current","","",100],[11,"load","","",100],[11,"free","","",100],[11,"expired","","",100],[11,"unused","","",100],[0,"context","rustful","Handler context and request body reading extensions."],[3,"Context","rustful::context","A container for things like request data and cache."],[12,"headers","","Headers from the HTTP request.",101],[12,"method","","The HTTP method.",101],[12,"path","","The requested path.",101],[12,"variables","","Route variables.",101],[12,"query","","Query variables from the path.",101],[12,"fragment","","The fragment part of the URL (after #), if provided.",101],[12,"cache","","Resource cache.",101],[12,"log","","Log for notes, errors and warnings.",101],[12,"body_reader","","A reader for the request body.",101],[3,"BodyReader","","A reader for a request body."],[8,"ExtQueryBody","","`BodyReader` extension for reading and parsing a query string."],[10,"read_query_body","","",102],[6,"Target","",""],[11,"deref","","",101],[11,"deref_mut","","",101],[11,"from_request","","",103],[11,"read","","Read the request body.",103],[11,"read_query_body","","Read and parse the request body as a query string.\nThe body will be decoded as UTF-8 and plain '+' characters will be replaced with spaces.",103],[0,"response","rustful","Response writers."],[3,"Response","rustful::response","An interface for setting HTTP status code and response headers, before data gets written to the client."],[3,"ResponseWriter","","An interface for writing to the response body."],[4,"ResponseError","","The result of a response action."],[13,"PluginError","","A response plugin failed.",104],[13,"IoError","","There was an IO error.",104],[4,"ResponseData","",""],[13,"Bytes","","Data in byte form.",105],[13,"ByteSlice","","Data in byte form.",105],[13,"String","","Data in string form.",105],[13,"StringSlice","","Data in string form.",105],[8,"IntoResponseData","","Represents anything that can be turned into `ResponseData`."],[10,"into_response_data","","",106],[11,"clone","","",104],[11,"from_error","","",104],[11,"fmt","","",104],[11,"description","","",104],[11,"cause","","",104],[11,"as_bytes","","Borrow the content as a byte slice.",105],[11,"into_bytes","","Turns the content into a byte vector. Slices are copied.",105],[11,"as_string","","Borrow the content as a string slice if the content is a string.\nReturns an `None` if the content is a byte vector, a byte slice or if the action is `Error`.",105],[11,"into_string","","Extract the contained string or string slice if there is any.\nReturns an `None` if the content is a byte vector, a byte slice or if the action is `Error`.\nSlices are copied.",105],[11,"into_response_data","collections::vec","",107],[11,"into_response_data","collections::string","",26],[11,"into_response_data","rustful::response","",105],[11,"new","","",108],[11,"set_status","","Set HTTP status code. Ok (200) is default.",108],[11,"set_header","","Set a HTTP response header. Date, content type (text/plain) and server is automatically set.",108],[11,"get_header","","Get a HTTP response header if set.",108],[11,"into_writer","","Turn the `Response` into a `ResponseWriter` to allow the response body to be written.",108],[11,"drop","","Writes status code and headers and closes the connection.",108],[11,"send","","Writes response body data to the client.",109],[11,"end","","Finish writing the response and collect eventual errors.",109],[11,"write","","",109],[11,"write_all","","",109],[11,"flush","","",109],[11,"drop","","Finishes writing and closes the connection.",109],[0,"plugin","rustful","Request and context plugins."],[4,"ContextAction","rustful::plugin","The result from a context plugin."],[13,"Continue","","Continue to the next plugin in the stack.",110],[13,"Abort","","Abort and send HTTP status.",110],[4,"ResponseAction","","The result from a `ResponsePlugin`."],[13,"Write","","Continue to the next plugin and maybe write data.",111],[13,"DoNothing","","Do not continue to the next plugin.",111],[13,"Error","","Abort with an error.",111],[8,"ContextPlugin","","A trait for context plugins."],[16,"Cache","rustful::plugin::ContextPlugin",""],[10,"modify","rustful::plugin","Try to modify the `Context`.",112],[8,"ResponsePlugin","","A trait for response plugins."],[10,"begin","","Set or modify headers before they are sent to the client and maybe initiate the body.",113],[10,"write","","Handle content before writing it to the body.",113],[10,"end","","End of body writing. Last chance to add content.",113],[11,"write","","",111],[11,"do_nothing","","",111],[11,"error","","",111],[0,"log","rustful","Log tools."],[3,"StdOut","rustful::log","Log tool for printing to standard output."],[3,"File","","Log tool for printing to a file."],[6,"Result","",""],[8,"Log","","Common trait for log tools."],[10,"try_note","","Print a note to the log or return eventual errors.",114],[10,"try_warning","","Print a warning to the log or return eventual errors.",114],[10,"try_error","","Print an error to the log or return eventual errors.",114],[11,"note","","Print a note to the log and ignore any errors.",114],[11,"warning","","Print a warning to the log and ignore any errors.",114],[11,"error","","Print an error to the log and ignore any errors.",114],[11,"try_note","","",115],[11,"try_warning","","",115],[11,"try_error","","",115],[11,"new","","",116],[11,"try_note","","",116],[11,"try_warning","","",116],[11,"try_error","","",116],[14,"insert_routes!","rustful","The `insert_routes!` macro generates routes from the provided handlers and routing tree and\nadds them to the provided router. The router is then returned."],[14,"content_type!","","A macro for assigning content types."]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[4,"Method"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Accept"],[3,"AcceptCharset"],[3,"AcceptEncoding"],[3,"Language"],[3,"AcceptLanguage"],[3,"Allow"],[3,"Authorization"],[3,"String"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[3,"Connection"],[4,"ConnectionOption"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"Etag"],[3,"Expires"],[3,"Host"],[4,"IfMatch"],[3,"LastModified"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[3,"IfUnmodifiedSince"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"Protocol"],[3,"UserAgent"],[4,"Vary"],[3,"OptCell"],[4,"PtrMap"],[3,"PtrMapCell"],[3,"Item"],[4,"Charset"],[4,"Encoding"],[3,"EntityTag"],[3,"Quality"],[3,"QualityItem"],[3,"Box"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"HeaderFormatter"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[3,"CloneTcpStream"],[4,"HttpStream"],[3,"HttpConnector"],[3,"Request"],[3,"Response"],[3,"ListenerPool"],[3,"Sentinel"],[3,"Server"],[3,"Listening"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[4,"HttpError"],[8,"Header"],[8,"HeaderFormat"],[8,"Scheme"],[4,"Scheme"],[3,"Server"],[3,"ServerInstance"],[8,"Router"],[3,"TreeRouter"],[8,"Handler"],[8,"Cache"],[8,"CachedValue"],[3,"CachedFile"],[3,"CachedProcessedFile"],[3,"Context"],[8,"ExtQueryBody"],[3,"BodyReader"],[4,"ResponseError"],[4,"ResponseData"],[8,"IntoResponseData"],[3,"Vec"],[3,"Response"],[3,"ResponseWriter"],[4,"ContextAction"],[4,"ResponseAction"],[8,"ContextPlugin"],[8,"ResponsePlugin"],[8,"Log"],[3,"StdOut"],[3,"File"]]};
initSearch(searchIndex);
