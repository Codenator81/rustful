var searchIndex = {};
searchIndex['rustful'] = {"items":[[0,"","rustful",""],[0,"mime","",""],[11,"fmt","mime","",0],[11,"eq","","",0],[11,"ne","","",0],[11,"ne","","",0],[11,"clone","","",0],[11,"clone_from","","",0],[11,"fmt","","",1],[11,"clone","","",1],[11,"clone_from","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"fmt","","",1],[6,"Err","rustful::mime",""],[11,"from_str","mime","",1],[11,"fmt","","",2],[11,"clone","","",2],[11,"clone_from","","",2],[11,"eq","","",2],[11,"ne","","",2],[11,"fmt","","",2],[6,"Err","rustful::mime",""],[11,"from_str","mime","",2],[11,"fmt","","",3],[11,"clone","","",3],[11,"clone_from","","",3],[11,"eq","","",3],[11,"ne","","",3],[11,"fmt","","",3],[6,"Err","rustful::mime",""],[11,"from_str","mime","",3],[11,"fmt","","",4],[11,"clone","","",4],[11,"clone_from","","",4],[11,"eq","","",4],[11,"ne","","",4],[11,"fmt","","",4],[6,"Err","rustful::mime",""],[11,"from_str","mime","",4],[11,"fmt","","",0],[6,"Err","rustful::mime",""],[11,"from_str","mime","",0],[3,"Mime","rustful::mime","Mime, or Media Type. Encapsulates common registers types."],[4,"TopLevel","",""],[13,"Star","","",1],[13,"Text","","",1],[13,"Image","","",1],[13,"Audio","","",1],[13,"Video","","",1],[13,"Application","","",1],[13,"Multipart","","",1],[13,"Message","","",1],[13,"Model","","",1],[13,"Ext","","",1],[4,"SubLevel","",""],[13,"Star","","",2],[13,"Plain","","",2],[13,"Html","","",2],[13,"Xml","","",2],[13,"Javascript","","",2],[13,"Css","","",2],[13,"Json","","",2],[13,"WwwFormUrlEncoded","","",2],[13,"FormData","","",2],[13,"Png","","",2],[13,"Gif","","",2],[13,"Bmp","","",2],[13,"Jpeg","","",2],[13,"Ext","","",2],[4,"Attr","",""],[13,"Charset","","",3],[13,"Q","","",3],[13,"Ext","","",3],[4,"Value","",""],[13,"Utf8","","",4],[13,"Ext","","",4],[6,"Param","",""],[11,"safe","hyper::method","Whether a method is considered \"safe\", meaning the request is\nessentially read-only.",5],[11,"idempotent","","Whether a method is considered \"idempotent\", meaning the request has\nthe same result is executed multiple times.",5],[11,"headers","hyper::client::request","Read the Request headers.",6],[11,"method","","Read the Request method.",6],[11,"new","","Create a new client request.",6],[11,"with_connector","","Create a new client request with a specific underlying NetworkStream.",6],[11,"start","","Consume a Fresh Request, writing the headers and method,\nreturning a Streaming Request.",6],[11,"headers_mut","","Get a mutable reference to the Request headers.",6],[11,"send","","Completes writing the request, and returns a response to read from.",6],[11,"write_all","","",6],[11,"flush","","",6],[11,"write","","",6],[11,"flush","","",6],[11,"write_fmt","","",6],[11,"write_str","","",6],[11,"write_line","","",6],[11,"write_char","","",6],[11,"write_int","","",6],[11,"write_uint","","",6],[11,"write_le_uint","","",6],[11,"write_le_int","","",6],[11,"write_be_uint","","",6],[11,"write_be_int","","",6],[11,"write_be_u64","","",6],[11,"write_be_u32","","",6],[11,"write_be_u16","","",6],[11,"write_be_i64","","",6],[11,"write_be_i32","","",6],[11,"write_be_i16","","",6],[11,"write_be_f64","","",6],[11,"write_be_f32","","",6],[11,"write_le_u64","","",6],[11,"write_le_u32","","",6],[11,"write_le_u16","","",6],[11,"write_le_i64","","",6],[11,"write_le_i32","","",6],[11,"write_le_i16","","",6],[11,"write_le_f64","","",6],[11,"write_le_f32","","",6],[11,"write_u8","","",6],[11,"write_i8","","",6],[11,"new","hyper::client::response","Creates a new response from a server.",7],[11,"status_raw","","Get the raw status code and reason.",7],[11,"into_inner","","Consumes the Request to return the NetworkStream underneath.",7],[11,"read","","",7],[11,"read_at_least","","",7],[11,"read_byte","","",7],[11,"push","","",7],[11,"push_at_least","","",7],[11,"read_exact","","",7],[11,"read_to_end","","",7],[11,"read_to_string","","",7],[11,"read_le_uint_n","","",7],[11,"read_le_int_n","","",7],[11,"read_be_uint_n","","",7],[11,"read_be_int_n","","",7],[11,"read_le_uint","","",7],[11,"read_le_int","","",7],[11,"read_be_uint","","",7],[11,"read_be_int","","",7],[11,"read_be_u64","","",7],[11,"read_be_u32","","",7],[11,"read_be_u16","","",7],[11,"read_be_i64","","",7],[11,"read_be_i32","","",7],[11,"read_be_i16","","",7],[11,"read_be_f64","","",7],[11,"read_be_f32","","",7],[11,"read_le_u64","","",7],[11,"read_le_u32","","",7],[11,"read_le_u16","","",7],[11,"read_le_i64","","",7],[11,"read_le_i32","","",7],[11,"read_le_i16","","",7],[11,"read_le_f64","","",7],[11,"read_le_f32","","",7],[11,"read_u8","","",7],[11,"read_i8","","",7],[11,"new","hyper::client","Create a new Client.",8],[11,"set_ssl_verifier","","Set the SSL verifier callback for use with OpenSSL.",8],[11,"with_connector","","Create a new client with a specific connector.",8],[11,"set_redirect_policy","","Set the RedirectPolicy.",8],[11,"get","","Execute a Get request.",8],[11,"head","","Execute a Head request.",8],[11,"post","","Execute a Post request.",8],[11,"put","","Execute a Put request.",8],[11,"delete","","Execute a Delete request.",8],[11,"request","","Build a new request using this Client.",8],[11,"body","","Set a request body to be sent.",9],[11,"headers","","Add additional headers to the request.",9],[11,"header","","Add an individual new header to the request.",9],[11,"send","","Execute this request and receive a Response back.",9],[11,"read","","",10],[11,"read_at_least","","",10],[11,"read_byte","","",10],[11,"push","","",10],[11,"push_at_least","","",10],[11,"read_exact","","",10],[11,"read_to_end","","",10],[11,"read_to_string","","",10],[11,"read_le_uint_n","","",10],[11,"read_le_int_n","","",10],[11,"read_be_uint_n","","",10],[11,"read_be_int_n","","",10],[11,"read_le_uint","","",10],[11,"read_le_int","","",10],[11,"read_be_uint","","",10],[11,"read_be_int","","",10],[11,"read_be_u64","","",10],[11,"read_be_u32","","",10],[11,"read_be_u16","","",10],[11,"read_be_i64","","",10],[11,"read_be_i32","","",10],[11,"read_be_i16","","",10],[11,"read_be_f64","","",10],[11,"read_be_f32","","",10],[11,"read_le_u64","","",10],[11,"read_le_u32","","",10],[11,"read_le_u16","","",10],[11,"read_le_i64","","",10],[11,"read_le_i32","","",10],[11,"read_le_i16","","",10],[11,"read_le_f64","","",10],[11,"read_le_f32","","",10],[11,"read_u8","","",10],[11,"read_i8","","",10],[11,"into_body","","",10],[11,"into_url","url","",11],[11,"clone","hyper::client","",12],[11,"clone_from","","",12],[11,"default","","",12],[11,"fmt","hyper::method","",5],[11,"hash","","",5],[11,"hash_slice","","",5],[11,"assert_receiver_is_total_eq","","",5],[11,"eq","","",5],[11,"ne","","",5],[11,"ne","","",5],[11,"clone","","",5],[11,"clone_from","","",5],[6,"Err","rustful",""],[11,"from_str","hyper::method","",5],[11,"fmt","","",5],[11,"new","hyper::header::cell","",13],[11,"set","","",13],[11,"get_mut","","",13],[6,"Target","rustful",""],[11,"deref","hyper::header::cell","",13],[11,"clone","","",13],[11,"clone_from","","",13],[11,"fmt","hyper::header::common::access_control::allow_headers","",14],[11,"eq","","",14],[11,"ne","","",14],[11,"ne","","",14],[11,"clone","","",14],[11,"clone_from","","",14],[11,"header_name","","",14],[11,"parse_header","","",14],[11,"fmt_header","","",14],[11,"fmt","hyper::header::common::access_control::allow_methods","",15],[11,"eq","","",15],[11,"ne","","",15],[11,"ne","","",15],[11,"clone","","",15],[11,"clone_from","","",15],[11,"header_name","","",15],[11,"parse_header","","",15],[11,"fmt_header","","",15],[11,"fmt","hyper::header::common::access_control::allow_origin","",16],[11,"eq","","",16],[11,"ne","","",16],[11,"ne","","",16],[11,"clone","","",16],[11,"clone_from","","",16],[11,"header_name","","",16],[11,"parse_header","","",16],[11,"fmt_header","","",16],[11,"fmt","hyper::header::common::access_control::max_age","",17],[11,"eq","","",17],[11,"ne","","",17],[11,"ne","","",17],[11,"clone","","",17],[11,"clone_from","","",17],[11,"header_name","","",17],[11,"parse_header","","",17],[11,"fmt_header","","",17],[11,"fmt","hyper::header::common::access_control::request_headers","",18],[11,"eq","","",18],[11,"ne","","",18],[11,"ne","","",18],[11,"clone","","",18],[11,"clone_from","","",18],[11,"header_name","","",18],[11,"parse_header","","",18],[11,"fmt_header","","",18],[11,"fmt","hyper::header::common::access_control::request_method","",19],[11,"eq","","",19],[11,"ne","","",19],[11,"ne","","",19],[11,"clone","","",19],[11,"clone_from","","",19],[11,"header_name","","",19],[11,"parse_header","","",19],[11,"fmt_header","","",19],[11,"fmt","hyper::header::common::accept","",20],[11,"eq","","",20],[11,"ne","","",20],[11,"ne","","",20],[11,"clone","","",20],[11,"clone_from","","",20],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept","",20],[11,"deref_mut","","",20],[11,"header_name","","",20],[11,"parse_header","","",20],[11,"fmt_header","","",20],[11,"fmt","","",20],[11,"fmt","hyper::header::common::accept_encoding","",21],[11,"eq","","",21],[11,"ne","","",21],[11,"ne","","",21],[11,"clone","","",21],[11,"clone_from","","",21],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept_encoding","",21],[11,"deref_mut","","",21],[11,"header_name","","",21],[11,"parse_header","","",21],[11,"fmt_header","","",21],[11,"fmt","","",21],[11,"fmt","hyper::header::common::accept_language","",22],[11,"eq","","",22],[11,"ne","","",22],[11,"ne","","",22],[11,"clone","","",22],[11,"clone_from","","",22],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::accept_language","",22],[11,"fmt","","",22],[11,"fmt","","",23],[11,"eq","","",23],[11,"ne","","",23],[11,"ne","","",23],[11,"clone","","",23],[11,"clone_from","","",23],[6,"Target","rustful",""],[11,"deref","hyper::header::common::accept_language","",23],[11,"deref_mut","","",23],[11,"header_name","","",23],[11,"parse_header","","",23],[11,"fmt_header","","",23],[11,"fmt","","",23],[11,"fmt","hyper::header::common::allow","",24],[11,"eq","","",24],[11,"ne","","",24],[11,"ne","","",24],[11,"clone","","",24],[11,"clone_from","","",24],[6,"Target","rustful",""],[11,"deref","hyper::header::common::allow","",24],[11,"deref_mut","","",24],[11,"header_name","","",24],[11,"parse_header","","",24],[11,"fmt_header","","",24],[11,"fmt","","",24],[11,"fmt","hyper::header::common::authorization","",25],[11,"eq","","",25],[11,"ne","","",25],[11,"ne","","",25],[11,"clone","","",25],[11,"clone_from","","",25],[6,"Target","rustful",""],[11,"deref","hyper::header::common::authorization","",25],[11,"deref_mut","","",25],[11,"header_name","","",25],[11,"parse_header","","",25],[11,"fmt_header","","",25],[11,"scheme","collections::string","",26],[11,"fmt_scheme","","",26],[11,"fmt","hyper::header::common::authorization","",27],[11,"eq","","",27],[11,"ne","","",27],[11,"ne","","",27],[11,"clone","","",27],[11,"clone_from","","",27],[11,"scheme","","",27],[11,"fmt_scheme","","",27],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::authorization","",27],[11,"fmt","hyper::header::common::cache_control","",28],[11,"clone","","",28],[11,"clone_from","","",28],[11,"eq","","",28],[11,"ne","","",28],[11,"ne","","",28],[6,"Target","rustful",""],[11,"deref","hyper::header::common::cache_control","",28],[11,"deref_mut","","",28],[11,"header_name","","",28],[11,"parse_header","","",28],[11,"fmt_header","","",28],[11,"fmt","","",29],[11,"clone","","",29],[11,"clone_from","","",29],[11,"eq","","",29],[11,"ne","","",29],[11,"ne","","",29],[11,"fmt","","",29],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::cache_control","",29],[11,"fmt","hyper::header::common::cookie","",30],[11,"eq","","",30],[11,"ne","","",30],[11,"ne","","",30],[11,"clone","","",30],[11,"clone_from","","",30],[6,"Target","rustful",""],[11,"deref","hyper::header::common::cookie","",30],[11,"deref_mut","","",30],[11,"header_name","","",30],[11,"parse_header","","",30],[11,"fmt_header","","",30],[11,"to_cookie_jar","","This method can be used to create CookieJar that can be used\nto manipulate cookies and create a corresponding `SetCookie` header afterwards.",30],[11,"from_cookie_jar","","Extracts all cookies from `CookieJar` and creates Cookie header.\nUseful for clients.",30],[11,"fmt","hyper::header::common::connection","",31],[11,"eq","","",31],[11,"ne","","",31],[11,"ne","","",31],[11,"clone","","",31],[11,"clone_from","","",31],[6,"Target","rustful",""],[11,"deref","hyper::header::common::connection","",31],[11,"deref_mut","","",31],[11,"fmt","","",32],[11,"eq","","",32],[11,"ne","","",32],[11,"ne","","",32],[11,"clone","","",32],[11,"clone_from","","",32],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::connection","",32],[11,"fmt","","",32],[11,"header_name","","",31],[11,"parse_header","","",31],[11,"fmt_header","","",31],[11,"fmt","hyper::header::common::content_length","",33],[11,"eq","","",33],[11,"ne","","",33],[11,"ne","","",33],[11,"clone","","",33],[11,"clone_from","","",33],[6,"Target","rustful",""],[11,"deref","hyper::header::common::content_length","",33],[11,"deref_mut","","",33],[11,"header_name","","",33],[11,"parse_header","","",33],[11,"fmt_header","","",33],[11,"fmt","","",33],[11,"fmt","hyper::header::common::content_type","",34],[11,"eq","","",34],[11,"ne","","",34],[11,"ne","","",34],[11,"clone","","",34],[11,"clone_from","","",34],[6,"Target","rustful",""],[11,"deref","hyper::header::common::content_type","",34],[11,"deref_mut","","",34],[11,"header_name","","",34],[11,"parse_header","","",34],[11,"fmt_header","","",34],[11,"fmt","","",34],[11,"fmt","hyper::header::common::date","",35],[11,"clone","","",35],[11,"clone_from","","",35],[11,"eq","","",35],[11,"ne","","",35],[11,"ne","","",35],[6,"Target","rustful",""],[11,"deref","hyper::header::common::date","",35],[11,"deref_mut","","",35],[11,"header_name","","",35],[11,"parse_header","","",35],[11,"fmt_header","","",35],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::date","",35],[11,"fmt","hyper::header::common::etag","",36],[11,"eq","","",36],[11,"ne","","",36],[11,"ne","","",36],[11,"clone","","",36],[11,"clone_from","","",36],[6,"Target","rustful",""],[11,"deref","hyper::header::common::etag","",36],[11,"deref_mut","","",36],[11,"header_name","","",36],[11,"parse_header","","",36],[11,"fmt_header","","",36],[11,"fmt","hyper::header::common::expires","",37],[11,"clone","","",37],[11,"clone_from","","",37],[11,"eq","","",37],[11,"ne","","",37],[11,"ne","","",37],[6,"Target","rustful",""],[11,"deref","hyper::header::common::expires","",37],[11,"deref_mut","","",37],[11,"header_name","","",37],[11,"parse_header","","",37],[11,"fmt_header","","",37],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::expires","",37],[11,"fmt","hyper::header::common::host","",38],[11,"eq","","",38],[11,"ne","","",38],[11,"ne","","",38],[11,"clone","","",38],[11,"clone_from","","",38],[11,"header_name","","",38],[11,"parse_header","","",38],[11,"fmt_header","","",38],[11,"fmt","hyper::header::common::if_match","",39],[11,"eq","","",39],[11,"ne","","",39],[11,"ne","","",39],[11,"clone","","",39],[11,"clone_from","","",39],[11,"header_name","","",39],[11,"parse_header","","",39],[11,"fmt_header","","",39],[11,"fmt","hyper::header::common::last_modified","",40],[11,"clone","","",40],[11,"clone_from","","",40],[11,"eq","","",40],[11,"ne","","",40],[11,"ne","","",40],[6,"Target","rustful",""],[11,"deref","hyper::header::common::last_modified","",40],[11,"deref_mut","","",40],[11,"header_name","","",40],[11,"parse_header","","",40],[11,"fmt_header","","",40],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::last_modified","",40],[11,"fmt","hyper::header::common::if_modified_since","",41],[11,"clone","","",41],[11,"clone_from","","",41],[11,"eq","","",41],[11,"ne","","",41],[11,"ne","","",41],[6,"Target","rustful",""],[11,"deref","hyper::header::common::if_modified_since","",41],[11,"deref_mut","","",41],[11,"header_name","","",41],[11,"parse_header","","",41],[11,"fmt_header","","",41],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::if_modified_since","",41],[11,"fmt","hyper::header::common::if_none_match","",42],[11,"eq","","",42],[11,"ne","","",42],[11,"ne","","",42],[11,"clone","","",42],[11,"clone_from","","",42],[11,"header_name","","",42],[11,"parse_header","","",42],[11,"fmt_header","","",42],[11,"fmt","hyper::header::common::if_unmodified_since","",43],[11,"clone","","",43],[11,"clone_from","","",43],[11,"eq","","",43],[11,"ne","","",43],[11,"ne","","",43],[6,"Target","rustful",""],[11,"deref","hyper::header::common::if_unmodified_since","",43],[11,"deref_mut","","",43],[11,"header_name","","",43],[11,"parse_header","","",43],[11,"fmt_header","","",43],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::if_unmodified_since","",43],[11,"fmt","hyper::header::common::location","",44],[11,"eq","","",44],[11,"ne","","",44],[11,"ne","","",44],[11,"clone","","",44],[11,"clone_from","","",44],[6,"Target","rustful",""],[11,"deref","hyper::header::common::location","",44],[11,"deref_mut","","",44],[11,"header_name","","",44],[11,"parse_header","","",44],[11,"fmt_header","","",44],[11,"fmt","","",44],[11,"fmt","hyper::header::common::pragma","",45],[11,"eq","","",45],[11,"ne","","",45],[11,"ne","","",45],[11,"clone","","",45],[11,"clone_from","","",45],[11,"header_name","","",45],[11,"parse_header","","",45],[11,"fmt_header","","",45],[11,"fmt","hyper::header::common::referer","",46],[11,"eq","","",46],[11,"ne","","",46],[11,"ne","","",46],[11,"clone","","",46],[11,"clone_from","","",46],[6,"Target","rustful",""],[11,"deref","hyper::header::common::referer","",46],[11,"deref_mut","","",46],[11,"header_name","","",46],[11,"parse_header","","",46],[11,"fmt_header","","",46],[11,"fmt","","",46],[11,"fmt","hyper::header::common::server","",47],[11,"eq","","",47],[11,"ne","","",47],[11,"ne","","",47],[11,"clone","","",47],[11,"clone_from","","",47],[6,"Target","rustful",""],[11,"deref","hyper::header::common::server","",47],[11,"deref_mut","","",47],[11,"header_name","","",47],[11,"parse_header","","",47],[11,"fmt_header","","",47],[11,"fmt","","",47],[11,"fmt","hyper::header::common::set_cookie","",48],[11,"eq","","",48],[11,"ne","","",48],[11,"ne","","",48],[11,"clone","","",48],[11,"clone_from","","",48],[6,"Target","rustful",""],[11,"deref","hyper::header::common::set_cookie","",48],[11,"deref_mut","","",48],[11,"header_name","","",48],[11,"parse_header","","",48],[11,"fmt_header","","",48],[11,"from_cookie_jar","","Use this to create SetCookie header from CookieJar using\ncalculated delta.",48],[11,"apply_to_cookie_jar","","Use this on client to apply changes from SetCookie to CookieJar.\nNote that this will `panic!` if `CookieJar` is not root.",48],[11,"fmt","hyper::header::common::transfer_encoding","",49],[11,"eq","","",49],[11,"ne","","",49],[11,"ne","","",49],[11,"clone","","",49],[11,"clone_from","","",49],[6,"Target","rustful",""],[11,"deref","hyper::header::common::transfer_encoding","",49],[11,"deref_mut","","",49],[11,"header_name","","",49],[11,"parse_header","","",49],[11,"fmt_header","","",49],[11,"fmt","","",49],[11,"fmt","hyper::header::common::upgrade","",50],[11,"eq","","",50],[11,"ne","","",50],[11,"ne","","",50],[11,"clone","","",50],[11,"clone_from","","",50],[6,"Target","rustful",""],[11,"deref","hyper::header::common::upgrade","",50],[11,"deref_mut","","",50],[11,"fmt","","",51],[11,"eq","","",51],[11,"ne","","",51],[11,"ne","","",51],[11,"clone","","",51],[11,"clone_from","","",51],[6,"Err","rustful",""],[11,"from_str","hyper::header::common::upgrade","",51],[11,"fmt","","",51],[11,"header_name","","",50],[11,"parse_header","","",50],[11,"fmt_header","","",50],[11,"fmt","hyper::header::common::user_agent","",52],[11,"eq","","",52],[11,"ne","","",52],[11,"ne","","",52],[11,"clone","","",52],[11,"clone_from","","",52],[6,"Target","rustful",""],[11,"deref","hyper::header::common::user_agent","",52],[11,"deref_mut","","",52],[11,"header_name","","",52],[11,"parse_header","","",52],[11,"fmt_header","","",52],[11,"fmt","","",52],[11,"fmt","hyper::header::common::vary","",53],[11,"eq","","",53],[11,"ne","","",53],[11,"ne","","",53],[11,"clone","","",53],[11,"clone_from","","",53],[11,"header_name","","",53],[11,"parse_header","","",53],[11,"fmt_header","","",53],[11,"fmt","hyper::header::shared::encoding","",54],[11,"eq","","",54],[11,"ne","","",54],[11,"ne","","",54],[11,"clone","","",54],[11,"clone_from","","",54],[11,"fmt","","",54],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::encoding","",54],[11,"fmt","hyper::header::shared::entity","",55],[11,"eq","","",55],[11,"ne","","",55],[11,"ne","","",55],[11,"clone","","",55],[11,"clone_from","","",55],[11,"fmt","","",55],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::entity","",55],[11,"fmt","hyper::header::shared::quality_item","",56],[11,"eq","","",56],[11,"ne","","",56],[11,"ne","","",56],[11,"clone","","",56],[11,"clone_from","","",56],[11,"new","","Creates a new `QualityItem` from an item and a quality.\nThe item can be of any type.\nThe quality should be a value in the range [0, 1].",56],[11,"partial_cmp","","",56],[11,"lt","","",56],[11,"le","","",56],[11,"gt","","",56],[11,"ge","","",56],[11,"fmt","","",56],[6,"Err","rustful",""],[11,"from_str","hyper::header::shared::quality_item","",56],[11,"downcast_ref_unchecked","","",57],[11,"downcast_mut_unchecked","","",57],[11,"downcast_unchecked","","",57],[11,"clone","alloc::boxed","",58],[11,"clone_from","","",58],[11,"clone","hyper::header","",59],[11,"clone_from","","",59],[11,"new","","Creates a new, empty headers map.",59],[11,"set","","Set a header field to the corresponding value.",59],[11,"get_raw","","Access the raw value of a header.",59],[11,"set_raw","","Set the raw value of a header, bypassing any typed headers.",59],[11,"get","","Get a reference to the header field's value, if it exists.",59],[11,"get_mut","","Get a mutable reference to the header field's value, if it exists.",59],[11,"has","","Returns a boolean of whether a certain header is in the map.",59],[11,"remove","","Removes a header from the map, if one existed.\nReturns true if a header has been removed.",59],[11,"iter","","Returns an iterator over the header fields.",59],[11,"len","","Returns the number of headers in the map.",59],[11,"clear","","Remove all headers from the map.",59],[11,"fmt","","",59],[11,"fmt","","",59],[6,"Item","rustful",""],[11,"next","hyper::header","",60],[11,"size_hint","","",60],[11,"is","","Check if a HeaderView is a certain Header.",61],[11,"name","","Get the Header name as a slice.",61],[11,"value","","Cast the value to a certain Header type.",61],[11,"value_string","","Get just the header value as a String.",61],[11,"fmt","","",61],[11,"fmt","","",61],[11,"extend","","",59],[11,"from_iter","","",59],[11,"clone","","",62],[11,"clone_from","","",62],[11,"fmt","","",62],[11,"fmt","alloc::boxed","",58],[11,"fmt","","",58],[11,"fmt","hyper::header","",63],[11,"fmt","","",63],[11,"unwrap","hyper::http","Unwraps this HttpReader and returns the underlying Reader.",64],[11,"read","","",64],[11,"read_at_least","","",64],[11,"read_byte","","",64],[11,"push","","",64],[11,"push_at_least","","",64],[11,"read_exact","","",64],[11,"read_to_end","","",64],[11,"read_to_string","","",64],[11,"read_le_uint_n","","",64],[11,"read_le_int_n","","",64],[11,"read_be_uint_n","","",64],[11,"read_be_int_n","","",64],[11,"read_le_uint","","",64],[11,"read_le_int","","",64],[11,"read_be_uint","","",64],[11,"read_be_int","","",64],[11,"read_be_u64","","",64],[11,"read_be_u32","","",64],[11,"read_be_u16","","",64],[11,"read_be_i64","","",64],[11,"read_be_i32","","",64],[11,"read_be_i16","","",64],[11,"read_be_f64","","",64],[11,"read_be_f32","","",64],[11,"read_le_u64","","",64],[11,"read_le_u32","","",64],[11,"read_le_u16","","",64],[11,"read_le_i64","","",64],[11,"read_le_i32","","",64],[11,"read_le_i16","","",64],[11,"read_le_f64","","",64],[11,"read_le_f32","","",64],[11,"read_u8","","",64],[11,"read_i8","","",64],[11,"unwrap","","Unwraps the HttpWriter and returns the underlying Writer.",65],[11,"get_ref","","Access the inner Writer.",65],[11,"get_mut","","Access the inner Writer mutably.",65],[11,"end","","Ends the HttpWriter, and returns the underlying Writer.",65],[11,"write_all","","",65],[11,"flush","","",65],[11,"write","","",65],[11,"flush","","",65],[11,"write_fmt","","",65],[11,"write_str","","",65],[11,"write_line","","",65],[11,"write_char","","",65],[11,"write_int","","",65],[11,"write_uint","","",65],[11,"write_le_uint","","",65],[11,"write_le_int","","",65],[11,"write_be_uint","","",65],[11,"write_be_int","","",65],[11,"write_be_u64","","",65],[11,"write_be_u32","","",65],[11,"write_be_u16","","",65],[11,"write_be_i64","","",65],[11,"write_be_i32","","",65],[11,"write_be_i16","","",65],[11,"write_be_f64","","",65],[11,"write_be_f32","","",65],[11,"write_le_u64","","",65],[11,"write_le_u32","","",65],[11,"write_le_u16","","",65],[11,"write_le_i64","","",65],[11,"write_le_i32","","",65],[11,"write_le_i16","","",65],[11,"write_le_f64","","",65],[11,"write_le_f32","","",65],[11,"write_u8","","",65],[11,"write_i8","","",65],[11,"fmt","","",66],[11,"eq","","",66],[11,"ne","","",66],[11,"ne","","",66],[11,"clone","","",66],[11,"clone_from","","",66],[6,"Item","rustful",""],[11,"next","hyper::net","",67],[11,"size_hint","","",67],[11,"fmt","alloc::boxed","",58],[11,"clone","","",58],[11,"clone_from","","",58],[11,"read","","",58],[11,"read_at_least","","",58],[11,"read_byte","","",58],[11,"push","","",58],[11,"push_at_least","","",58],[11,"read_exact","","",58],[11,"read_to_end","","",58],[11,"read_to_string","","",58],[11,"read_le_uint_n","","",58],[11,"read_le_int_n","","",58],[11,"read_be_uint_n","","",58],[11,"read_be_int_n","","",58],[11,"read_le_uint","","",58],[11,"read_le_int","","",58],[11,"read_be_uint","","",58],[11,"read_be_int","","",58],[11,"read_be_u64","","",58],[11,"read_be_u32","","",58],[11,"read_be_u16","","",58],[11,"read_be_i64","","",58],[11,"read_be_i32","","",58],[11,"read_be_i16","","",58],[11,"read_be_f64","","",58],[11,"read_be_f32","","",58],[11,"read_le_u64","","",58],[11,"read_le_u32","","",58],[11,"read_le_u16","","",58],[11,"read_le_i64","","",58],[11,"read_le_i32","","",58],[11,"read_le_i16","","",58],[11,"read_le_f64","","",58],[11,"read_le_f32","","",58],[11,"read_u8","","",58],[11,"read_i8","","",58],[11,"write_all","","",58],[11,"flush","","",58],[11,"write","","",58],[11,"flush","","",58],[11,"write_fmt","","",58],[11,"write_str","","",58],[11,"write_line","","",58],[11,"write_char","","",58],[11,"write_int","","",58],[11,"write_uint","","",58],[11,"write_le_uint","","",58],[11,"write_le_int","","",58],[11,"write_be_uint","","",58],[11,"write_be_int","","",58],[11,"write_be_u64","","",58],[11,"write_be_u32","","",58],[11,"write_be_u16","","",58],[11,"write_be_i64","","",58],[11,"write_be_i32","","",58],[11,"write_be_i16","","",58],[11,"write_be_f64","","",58],[11,"write_be_f32","","",58],[11,"write_le_u64","","",58],[11,"write_le_u32","","",58],[11,"write_le_u16","","",58],[11,"write_le_i64","","",58],[11,"write_le_i32","","",58],[11,"write_le_i16","","",58],[11,"write_le_f64","","",58],[11,"write_le_f32","","",58],[11,"write_u8","","",58],[11,"write_i8","","",58],[11,"downcast_ref_unchecked","","",68],[11,"downcast_mut_unchecked","","",68],[11,"downcast_unchecked","","",68],[11,"is","","Is the underlying type in this trait object a T?",68],[11,"downcast_ref","","If the underlying type is T, get a reference to the contained data.",68],[11,"downcast_mut","","If the underlying type is T, get a mutable reference to the contained\ndata.",68],[11,"downcast","","If the underlying type is T, extract it.",68],[6,"Acceptor","rustful",""],[11,"listen","hyper::net","",69],[11,"clone","","",70],[11,"clone_from","","",70],[6,"Stream","rustful",""],[11,"accept","hyper::net","",70],[11,"close","","",70],[11,"socket_name","","",70],[11,"incoming","","",70],[11,"clone","","",71],[11,"clone_from","","",71],[11,"read","","",71],[11,"read_at_least","","",71],[11,"read_byte","","",71],[11,"push","","",71],[11,"push_at_least","","",71],[11,"read_exact","","",71],[11,"read_to_end","","",71],[11,"read_to_string","","",71],[11,"read_le_uint_n","","",71],[11,"read_le_int_n","","",71],[11,"read_be_uint_n","","",71],[11,"read_be_int_n","","",71],[11,"read_le_uint","","",71],[11,"read_le_int","","",71],[11,"read_be_uint","","",71],[11,"read_be_int","","",71],[11,"read_be_u64","","",71],[11,"read_be_u32","","",71],[11,"read_be_u16","","",71],[11,"read_be_i64","","",71],[11,"read_be_i32","","",71],[11,"read_be_i16","","",71],[11,"read_be_f64","","",71],[11,"read_be_f32","","",71],[11,"read_le_u64","","",71],[11,"read_le_u32","","",71],[11,"read_le_u16","","",71],[11,"read_le_i64","","",71],[11,"read_le_i32","","",71],[11,"read_le_i16","","",71],[11,"read_le_f64","","",71],[11,"read_le_f32","","",71],[11,"read_u8","","",71],[11,"read_i8","","",71],[11,"write_all","","",71],[11,"flush","","",71],[11,"write","","",71],[11,"flush","","",71],[11,"write_fmt","","",71],[11,"write_str","","",71],[11,"write_line","","",71],[11,"write_char","","",71],[11,"write_int","","",71],[11,"write_uint","","",71],[11,"write_le_uint","","",71],[11,"write_le_int","","",71],[11,"write_be_uint","","",71],[11,"write_be_int","","",71],[11,"write_be_u64","","",71],[11,"write_be_u32","","",71],[11,"write_be_u16","","",71],[11,"write_be_i64","","",71],[11,"write_be_i32","","",71],[11,"write_be_i16","","",71],[11,"write_be_f64","","",71],[11,"write_be_f32","","",71],[11,"write_le_u64","","",71],[11,"write_le_u32","","",71],[11,"write_le_u16","","",71],[11,"write_le_i64","","",71],[11,"write_le_i32","","",71],[11,"write_le_i16","","",71],[11,"write_le_f64","","",71],[11,"write_le_f32","","",71],[11,"write_u8","","",71],[11,"write_i8","","",71],[11,"peer_name","","",71],[6,"Stream","rustful",""],[11,"connect","hyper::net","",72],[11,"new","hyper::server::request","Create a new Request, reading the StartLine and Headers so they are\nimmediately useful.",73],[11,"deconstruct","","Deconstruct a Request into its constituent parts.",73],[11,"read","","",73],[11,"read_at_least","","",73],[11,"read_byte","","",73],[11,"push","","",73],[11,"push_at_least","","",73],[11,"read_exact","","",73],[11,"read_to_end","","",73],[11,"read_to_string","","",73],[11,"read_le_uint_n","","",73],[11,"read_le_int_n","","",73],[11,"read_be_uint_n","","",73],[11,"read_be_int_n","","",73],[11,"read_le_uint","","",73],[11,"read_le_int","","",73],[11,"read_be_uint","","",73],[11,"read_be_int","","",73],[11,"read_be_u64","","",73],[11,"read_be_u32","","",73],[11,"read_be_u16","","",73],[11,"read_be_i64","","",73],[11,"read_be_i32","","",73],[11,"read_be_i16","","",73],[11,"read_be_f64","","",73],[11,"read_be_f32","","",73],[11,"read_le_u64","","",73],[11,"read_le_u32","","",73],[11,"read_le_u16","","",73],[11,"read_le_i64","","",73],[11,"read_le_i32","","",73],[11,"read_le_i16","","",73],[11,"read_le_f64","","",73],[11,"read_le_f32","","",73],[11,"read_u8","","",73],[11,"read_i8","","",73],[11,"status","hyper::server::response","The status of this response.",74],[11,"headers","","The headers of this response.",74],[11,"construct","","Construct a Response from its constituent parts.",74],[11,"deconstruct","","Deconstruct this Response into its constituent parts.",74],[11,"new","","Creates a new Response that can be used to write to a network stream.",74],[11,"start","","Consume this Response<Fresh>, writing the Headers and Status and creating a Response<Streaming>",74],[11,"status_mut","","Get a mutable reference to the status.",74],[11,"headers_mut","","Get a mutable reference to the Headers.",74],[11,"end","","Flushes all writing of a response to the client.",74],[11,"write_all","","",74],[11,"flush","","",74],[11,"write","","",74],[11,"flush","","",74],[11,"write_fmt","","",74],[11,"write_str","","",74],[11,"write_line","","",74],[11,"write_char","","",74],[11,"write_int","","",74],[11,"write_uint","","",74],[11,"write_le_uint","","",74],[11,"write_le_int","","",74],[11,"write_be_uint","","",74],[11,"write_be_int","","",74],[11,"write_be_u64","","",74],[11,"write_be_u32","","",74],[11,"write_be_u16","","",74],[11,"write_be_i64","","",74],[11,"write_be_i32","","",74],[11,"write_be_i16","","",74],[11,"write_be_f64","","",74],[11,"write_be_f32","","",74],[11,"write_le_u64","","",74],[11,"write_le_u32","","",74],[11,"write_le_u16","","",74],[11,"write_le_i64","","",74],[11,"write_le_i32","","",74],[11,"write_le_i16","","",74],[11,"write_le_f64","","",74],[11,"write_le_f32","","",74],[11,"write_u8","","",74],[11,"write_i8","","",74],[11,"new","hyper::server::acceptor","Create a thread pool to manage the acceptor.",75],[11,"accept","","Runs the acceptor pool. Blocks until the acceptors are closed.",75],[11,"drop","","",76],[11,"http","hyper::server","Creates a new server that will handle `HttpStream`s.",77],[11,"https","","Creates a new server that will handler `HttpStreams`s using a TLS connection.",77],[11,"with_listener","","Creates a new server that will handle `HttpStream`s.",77],[11,"listen_threads","","Binds to a socket, and starts handling connections using a task pool.",77],[11,"listen","","Binds to a socket and starts handling connections.",77],[11,"close","","Stop the server from listening to its socket address.",78],[11,"canonical_reason","hyper::status","Get the standardised `reason-phrase` for this status code.",79],[11,"class","","Determine the class of a status code, based on its first digit.",79],[11,"is_informational","","Check if class is Informational.",79],[11,"is_success","","Check if class is Success.",79],[11,"is_redirection","","Check if class is Redirection.",79],[11,"is_client_error","","Check if class is ClientError.",79],[11,"is_server_error","","Check if class is ServerError.",79],[11,"is_strange_status","","Check if class is NoClass",79],[11,"fmt","","",79],[11,"fmt","","",79],[11,"eq","","",79],[11,"ne","","",79],[11,"assert_receiver_is_total_eq","","",79],[11,"clone","","",79],[11,"clone_from","","",79],[11,"from_i64","","",79],[11,"from_u64","","",79],[11,"from_int","","",79],[11,"from_i8","","",79],[11,"from_i16","","",79],[11,"from_i32","","",79],[11,"from_uint","","",79],[11,"from_u8","","",79],[11,"from_u16","","",79],[11,"from_u32","","",79],[11,"from_f32","","",79],[11,"from_f64","","",79],[11,"partial_cmp","","",79],[11,"lt","","",79],[11,"le","","",79],[11,"gt","","",79],[11,"ge","","",79],[11,"cmp","","",79],[11,"to_i64","","",79],[11,"to_u64","","",79],[11,"to_int","","",79],[11,"to_i8","","",79],[11,"to_i16","","",79],[11,"to_i32","","",79],[11,"to_uint","","",79],[11,"to_u8","","",79],[11,"to_u16","","",79],[11,"to_u32","","",79],[11,"to_f32","","",79],[11,"to_f64","","",79],[11,"cmp","","",80],[11,"partial_cmp","","",80],[11,"lt","","",80],[11,"le","","",80],[11,"gt","","",80],[11,"ge","","",80],[11,"lt","","",80],[11,"le","","",80],[11,"gt","","",80],[11,"ge","","",80],[11,"assert_receiver_is_total_eq","","",80],[11,"eq","","",80],[11,"ne","","",80],[11,"ne","","",80],[11,"clone","","",80],[11,"clone_from","","",80],[11,"default_code","","Get the default status code for the class.",80],[11,"to_i64","","",80],[11,"to_u64","","",80],[11,"to_int","","",80],[11,"to_i8","","",80],[11,"to_i16","","",80],[11,"to_i32","","",80],[11,"to_uint","","",80],[11,"to_u8","","",80],[11,"to_u16","","",80],[11,"to_u32","","",80],[11,"to_f32","","",80],[11,"to_f64","","",80],[11,"clone","hyper::uri","",81],[11,"clone_from","","",81],[11,"eq","","",81],[11,"ne","","",81],[11,"ne","","",81],[11,"fmt","","",81],[11,"fmt","hyper::version","",82],[11,"partial_cmp","","",82],[11,"lt","","",82],[11,"le","","",82],[11,"gt","","",82],[11,"ge","","",82],[11,"lt","","",82],[11,"le","","",82],[11,"gt","","",82],[11,"ge","","",82],[11,"eq","","",82],[11,"ne","","",82],[11,"ne","","",82],[11,"fmt","","",82],[11,"clone","hyper","",83],[11,"clone_from","","",83],[11,"eq","","",83],[11,"ne","","",83],[11,"ne","","",83],[11,"fmt","","",83],[11,"fmt","","",83],[11,"description","","",83],[11,"cause","","",83],[11,"cause","","",83],[11,"from_error","","",83],[11,"from_error","","",83],[4,"Method","rustful","The Request Method (VERB)"],[13,"Options","","OPTIONS",5],[13,"Get","","GET",5],[13,"Post","","POST",5],[13,"Put","","PUT",5],[13,"Delete","","DELETE",5],[13,"Head","","HEAD",5],[13,"Trace","","TRACE",5],[13,"Connect","","CONNECT",5],[13,"Patch","","PATCH",5],[13,"Extension","","Method extentions. An example would be `let m = Extension(\"FOO\".to_string())`.",5],[4,"StatusCode","","An HTTP status code (`status-code` in RFC 7230 et al.)."],[13,"Continue","","100 Continue\n[[RFC7231, Section 6.2.1](https://tools.ietf.org/html/rfc7231#section-6.2.1)]",79],[13,"SwitchingProtocols","","101 Switching Protocols\n[[RFC7231, Section 6.2.2](https://tools.ietf.org/html/rfc7231#section-6.2.2)]",79],[13,"Processing","","102 Processing\n[[RFC2518](https://tools.ietf.org/html/rfc2518)]",79],[13,"Ok","","200 OK\n[[RFC7231, Section 6.3.1](https://tools.ietf.org/html/rfc7231#section-6.3.1)]",79],[13,"Created","","201 Created\n[[RFC7231, Section 6.3.2](https://tools.ietf.org/html/rfc7231#section-6.3.2)]",79],[13,"Accepted","","202 Accepted\n[[RFC7231, Section 6.3.3](https://tools.ietf.org/html/rfc7231#section-6.3.3)]",79],[13,"NonAuthoritativeInformation","","203 Non-Authoritative Information\n[[RFC7231, Section 6.3.4](https://tools.ietf.org/html/rfc7231#section-6.3.4)]",79],[13,"NoContent","","204 No Content\n[[RFC7231, Section 6.3.5](https://tools.ietf.org/html/rfc7231#section-6.3.5)]",79],[13,"ResetContent","","205 Reset Content\n[[RFC7231, Section 6.3.6](https://tools.ietf.org/html/rfc7231#section-6.3.6)]",79],[13,"PartialContent","","206 Partial Content\n[[RFC7233, Section 4.1](https://tools.ietf.org/html/rfc7233#section-4.1)]",79],[13,"MultiStatus","","207 Multi-Status\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",79],[13,"AlreadyReported","","208 Already Reported\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",79],[13,"ImUsed","","226 IM Used\n[[RFC3229](https://tools.ietf.org/html/rfc3229)]",79],[13,"MultipleChoices","","300 Multiple Choices\n[[RFC7231, Section 6.4.1](https://tools.ietf.org/html/rfc7231#section-6.4.1)]",79],[13,"MovedPermanently","","301 Moved Permanently\n[[RFC7231, Section 6.4.2](https://tools.ietf.org/html/rfc7231#section-6.4.2)]",79],[13,"Found","","302 Found\n[[RFC7231, Section 6.4.3](https://tools.ietf.org/html/rfc7231#section-6.4.3)]",79],[13,"SeeOther","","303 See Other\n[[RFC7231, Section 6.4.4](https://tools.ietf.org/html/rfc7231#section-6.4.4)]",79],[13,"NotModified","","304 Not Modified\n[[RFC7232, Section 4.1](https://tools.ietf.org/html/rfc7232#section-4.1)]",79],[13,"UseProxy","","305 Use Proxy\n[[RFC7231, Section 6.4.5](https://tools.ietf.org/html/rfc7231#section-6.4.5)]",79],[13,"TemporaryRedirect","","307 Temporary Redirect\n[[RFC7231, Section 6.4.7](https://tools.ietf.org/html/rfc7231#section-6.4.7)]",79],[13,"PermanentRedirect","","308 Permanent Redirect\n[[RFC7238](https://tools.ietf.org/html/rfc7238)]",79],[13,"BadRequest","","400 Bad Request\n[[RFC7231, Section 6.5.1](https://tools.ietf.org/html/rfc7231#section-6.5.1)]",79],[13,"Unauthorized","","401 Unauthorized\n[[RFC7235, Section 3.1](https://tools.ietf.org/html/rfc7235#section-3.1)]",79],[13,"PaymentRequired","","402 Payment Required\n[[RFC7231, Section 6.5.2](https://tools.ietf.org/html/rfc7231#section-6.5.2)]",79],[13,"Forbidden","","403 Forbidden\n[[RFC7231, Section 6.5.3](https://tools.ietf.org/html/rfc7231#section-6.5.3)]",79],[13,"NotFound","","404 Not Found\n[[RFC7231, Section 6.5.4](https://tools.ietf.org/html/rfc7231#section-6.5.4)]",79],[13,"MethodNotAllowed","","405 Method Not Allowed\n[[RFC7231, Section 6.5.5](https://tools.ietf.org/html/rfc7231#section-6.5.5)]",79],[13,"NotAcceptable","","406 Not Acceptable\n[[RFC7231, Section 6.5.6](https://tools.ietf.org/html/rfc7231#section-6.5.6)]",79],[13,"ProxyAuthenticationRequired","","407 Proxy Authentication Required\n[[RFC7235, Section 3.2](https://tools.ietf.org/html/rfc7235#section-3.2)]",79],[13,"RequestTimeout","","408 Request Timeout\n[[RFC7231, Section 6.5.7](https://tools.ietf.org/html/rfc7231#section-6.5.7)]",79],[13,"Conflict","","409 Conflict\n[[RFC7231, Section 6.5.8](https://tools.ietf.org/html/rfc7231#section-6.5.8)]",79],[13,"Gone","","410 Gone\n[[RFC7231, Section 6.5.9](https://tools.ietf.org/html/rfc7231#section-6.5.9)]",79],[13,"LengthRequired","","411 Length Required\n[[RFC7231, Section 6.5.10](https://tools.ietf.org/html/rfc7231#section-6.5.10)]",79],[13,"PreconditionFailed","","412 Precondition Failed\n[[RFC7232, Section 4.2](https://tools.ietf.org/html/rfc7232#section-4.2)]",79],[13,"PayloadTooLarge","","413 Payload Too Large\n[[RFC7231, Section 6.5.11](https://tools.ietf.org/html/rfc7231#section-6.5.11)]",79],[13,"UriTooLong","","414 URI Too Long\n[[RFC7231, Section 6.5.12](https://tools.ietf.org/html/rfc7231#section-6.5.12)]",79],[13,"UnsupportedMediaType","","415 Unsupported Media Type\n[[RFC7231, Section 6.5.13](https://tools.ietf.org/html/rfc7231#section-6.5.13)]",79],[13,"RangeNotSatisfiable","","416 Range Not Satisfiable\n[[RFC7233, Section 4.4](https://tools.ietf.org/html/rfc7233#section-4.4)]",79],[13,"ExpectationFailed","","417 Expectation Failed\n[[RFC7231, Section 6.5.14](https://tools.ietf.org/html/rfc7231#section-6.5.14)]",79],[13,"ImATeapot","","418 I'm a teapot\n[curiously, not registered by IANA, but [RFC2324](https://tools.ietf.org/html/rfc2324)]",79],[13,"UnprocessableEntity","","422 Unprocessable Entity\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",79],[13,"Locked","","423 Locked\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",79],[13,"FailedDependency","","424 Failed Dependency\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",79],[13,"UpgradeRequired","","426 Upgrade Required\n[[RFC7231, Section 6.5.15](https://tools.ietf.org/html/rfc7231#section-6.5.15)]",79],[13,"PreconditionRequired","","428 Precondition Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",79],[13,"TooManyRequests","","429 Too Many Requests\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",79],[13,"RequestHeaderFieldsTooLarge","","431 Request Header Fields Too Large\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",79],[13,"InternalServerError","","500 Internal Server Error\n[[RFC7231, Section 6.6.1](https://tools.ietf.org/html/rfc7231#section-6.6.1)]",79],[13,"NotImplemented","","501 Not Implemented\n[[RFC7231, Section 6.6.2](https://tools.ietf.org/html/rfc7231#section-6.6.2)]",79],[13,"BadGateway","","502 Bad Gateway\n[[RFC7231, Section 6.6.3](https://tools.ietf.org/html/rfc7231#section-6.6.3)]",79],[13,"ServiceUnavailable","","503 Service Unavailable\n[[RFC7231, Section 6.6.4](https://tools.ietf.org/html/rfc7231#section-6.6.4)]",79],[13,"GatewayTimeout","","504 Gateway Timeout\n[[RFC7231, Section 6.6.5](https://tools.ietf.org/html/rfc7231#section-6.6.5)]",79],[13,"HttpVersionNotSupported","","505 HTTP Version Not Supported\n[[RFC7231, Section 6.6.6](https://tools.ietf.org/html/rfc7231#section-6.6.6)]",79],[13,"VariantAlsoNegotiates","","506 Variant Also Negotiates\n[[RFC2295](https://tools.ietf.org/html/rfc2295)]",79],[13,"InsufficientStorage","","507 Insufficient Storage\n[[RFC4918](https://tools.ietf.org/html/rfc4918)]",79],[13,"LoopDetected","","508 Loop Detected\n[[RFC5842](https://tools.ietf.org/html/rfc5842)]",79],[13,"NotExtended","","510 Not Extended\n[[RFC2774](https://tools.ietf.org/html/rfc2774)]",79],[13,"NetworkAuthenticationRequired","","511 Network Authentication Required\n[[RFC6585](https://tools.ietf.org/html/rfc6585)]",79],[13,"Unregistered","","A status code not in the IANA HTTP status code registry or very well known",79],[0,"header","","Headers container, and common header fields."],[0,"parsing","rustful::header","Utility functions for Header implementations."],[5,"from_one_raw_str","rustful::header::parsing","Reads a single raw string when parsing a header"],[5,"from_comma_delimited","","Reads a comma-delimited raw header into a Vec."],[5,"from_one_comma_delimited","","Reads a comma-delimited raw string into a Vec."],[5,"fmt_comma_delimited","","Format an array into a comma-delimited string."],[5,"tm_from_str","","Get a Tm from HTTP date formats."],[8,"Header","rustful::header","A trait for any object that will represent a header field and value."],[10,"header_name","","Returns the name of the header field this belongs to.",84],[10,"parse_header","","Parse a header from a raw stream of bytes.",84],[8,"HeaderFormat","","A trait for any object that will represent a header field and value."],[10,"fmt_header","","Format a header to be output into a TcpStream.",57],[3,"Headers","","A map of header fields on requests and responses."],[3,"HeadersItems","","An `Iterator` over the fields in a `Headers` map."],[3,"HeaderView","","Returned with the `HeadersItems` iterator."],[3,"HeaderFormatter","","A wrapper around any Header with a Display impl that calls fmt_header."],[3,"Connection","","The `Connection` header."],[3,"Allow","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.4.1"],[3,"IfUnmodifiedSince","","The `If-Unmodified-Since` header field."],[3,"UserAgent","","The `User-Agent` header field."],[3,"Authorization","","The `Authorization` header field."],[3,"ContentType","","The `Content-Type` header."],[3,"AccessControlMaxAge","","The `Access-Control-Max-Age` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"IfMatch","","The `If-Match` header"],[13,"Any","","This corresponds to '*'.",39],[13,"EntityTags","","The header field names which will influence the response representation.",39],[4,"Encoding","","A value to represent an encoding used in `Transfer-Encoding`\nor `Accept-Encoding` header."],[13,"Chunked","","The `chunked` encoding.",54],[13,"Gzip","","The `gzip` encoding.",54],[13,"Deflate","","The `deflate` encoding.",54],[13,"Compress","","The `compress` encoding.",54],[13,"Identity","","The `identity` encoding.",54],[13,"EncodingExt","","Some other encoding that is less common, can be any String.",54],[3,"Expires","","The `Expires` header field."],[3,"AccessControlAllowMethods","","The `Access-Control-Allow-Methods` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Server","","The `Server` header field."],[4,"CacheDirective","","CacheControl contains a list of these directives."],[13,"NoCache","","\"no-cache\"",29],[13,"NoStore","","\"no-store\"",29],[13,"NoTransform","","\"no-transform\"",29],[13,"OnlyIfCached","","\"only-if-cached\"",29],[13,"MaxAge","","\"max-age=delta\"",29],[13,"MaxStale","","\"max-stale=delta\"",29],[13,"MinFresh","","\"min-fresh=delta\"",29],[13,"MustRevalidate","","\"must-revalidate\"",29],[13,"Public","","\"public\"",29],[13,"Private","","\"private\"",29],[13,"ProxyRevalidate","","\"proxy-revalidate\"",29],[13,"SMaxAge","","\"s-maxage=delta\"",29],[13,"Extension","","Extension directives. Optionally include an argument.",29],[3,"ContentLength","","The `Content-Length` header."],[3,"LastModified","","The `LastModified` header field."],[3,"Date","","The `Date` header field."],[3,"AccessControlRequestMethod","","The `Access-Control-Request-Method` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"SetCookie","","The `Set-Cookie` header"],[8,"Scheme","","An Authorization scheme to be used in the header."],[10,"scheme","","An optional Scheme name.",85],[10,"fmt_scheme","","Format the Scheme data into a header value.",85],[3,"AccessControlAllowHeaders","","The `Access-Control-Allow-Headers` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[4,"IfNoneMatch","","The `If-None-Match` header defined by HTTP/1.1."],[13,"Any","","This corresponds to '*'.",42],[13,"EntityTags","","The header field names which will influence the response representation.",42],[3,"TransferEncoding","","The `Transfer-Encoding` header."],[3,"Accept","","The `Accept` header."],[4,"AccessControlAllowOrigin","","The `Access-Control-Allow-Origin` response header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[13,"AllowStar","","Allow all origins",16],[13,"AllowOrigin","","Allow one particular origin",16],[4,"Vary","","The `Allow` header.\nSee also https://tools.ietf.org/html/rfc7231#section-7.1.4"],[13,"Any","","This corresponds to '*'.",53],[13,"Headers","","The header field names which will influence the response representation.",53],[3,"CacheControl","","The Cache-Control header."],[3,"Basic","","Credential holder for Basic Authentication"],[12,"username","","The username as a possibly empty string",27],[12,"password","","The password. `None` if the `:` delimiter character was not\npart of the parsed input.",27],[3,"Location","","The `Location` header."],[3,"IfModifiedSince","","The `If-Modified-Since` header field."],[3,"Host","","The `Host` header."],[12,"hostname","","The hostname, such a example.domain.",38],[12,"port","","An optional port number.",38],[5,"qitem","","Convinience function to wrap a value in a `QualityItem`\nSets `q` to the default 1.0"],[3,"AcceptEncoding","","The `Accept-Encoding` header"],[3,"AccessControlRequestHeaders","","The `Access-Control-Request-Headers` request header,\npart of [CORS](http://www.w3.org/TR/cors/)."],[3,"Upgrade","","The `Upgrade` header."],[4,"Protocol","","Protocol values that can appear in the Upgrade header."],[13,"WebSocket","","The websocket protocol.",51],[13,"ProtocolExt","","Some other less common protocol.",51],[3,"Referer","","The `Referer` header."],[3,"AcceptLanguage","","The `Accept-Language` header"],[3,"EntityTag","","An entity tag"],[12,"weak","","Weakness indicator for the tag",55],[12,"tag","","The opaque string in between the DQUOTEs",55],[4,"Pragma","","The `Pragma` header defined by HTTP/1.0."],[13,"NoCache","","Corresponds to the `no-cache` value.",45],[13,"Ext","","Every value other than `no-cache`.",45],[3,"QualityItem","","Represents an item with a quality value as defined in\n[RFC7231](https://tools.ietf.org/html/rfc7231#section-5.3.1)."],[12,"item","","The actual contents of the field.",56],[12,"quality","","The quality (client or server preference) for the value.",56],[3,"Cookie","","The `Cookie` header. Defined in [RFC6265](tools.ietf.org/html/rfc6265#section-5.4):"],[4,"ConnectionOption","","Values that can be in the `Connection` header."],[13,"KeepAlive","","The `keep-alive` connection value.",32],[13,"Close","","The `close` connection value.",32],[13,"ConnectionHeader","","Values in the Connection header that are supposed to be names of other Headers.",32],[3,"Etag","","The `Etag` header."],[6,"HttpResult","rustful",""],[4,"HttpError","","A set of errors that can occur parsing HTTP streams."],[13,"HttpMethodError","","An invalid `Method`, such as `GE,T`.",83],[13,"HttpUriError","","An invalid `RequestUri`, such as `exam ple.domain`.",83],[13,"HttpVersionError","","An invalid `HttpVersion`, such as `HTP/1.1`",83],[13,"HttpHeaderError","","An invalid `Header`.",83],[13,"HttpStatusError","","An invalid `Status`, such as `1337 ELITE`.",83],[13,"HttpIoError","","An `IoError` that occured while trying to read or write to a network stream.",83],[4,"Protocol","","HTTP or HTTPS"],[13,"Http","","Standard HTTP.",86],[13,"Https","","HTTP with SSL encryption.",86],[12,"cert","rustful::Protocol","Path to SSL certificate.",86],[12,"key","","Path to key file.",86],[0,"server","rustful","Server configuration and instance."],[3,"Listening","rustful::server","A listening server, which can later be closed."],[12,"socket","","The socket addresses that the server is bound to.",78],[3,"Server","","Used to build and run a server."],[12,"handlers","","One or several response handlers.",87],[12,"port","","The port where the server will listen for requests.",87],[12,"host","","The host address where the server will listen for requests.",87],[12,"protocol","","The type of HTTP protocol.",87],[12,"threads","","The number of threads to be used in the server task pool.\nThe default (`None`) is based on recommendations from the system.",87],[12,"server","","The content of the server header.",87],[12,"content_type","","The default media type.",87],[12,"cache","","A structure where resources are cached.",87],[12,"cache_clean_interval","","How often the cache should be cleaned. Measured in seconds.",87],[12,"log","","Tool for printing to a log.",87],[12,"context_plugins","","The context plugin stack.",87],[12,"response_plugins","","The response plugin stack.",87],[3,"ServerInstance","","A runnable instance of a server."],[11,"new","","Create a new empty server which will listen on host address `0.0.0.0` and port `80`.",87],[11,"with_cache","","Create a new empty server with a cache.",87],[11,"handlers","","Set request handlers.",87],[11,"port","","Change the port. Default is `80`.",87],[11,"host","","Change the host address. Default is `0.0.0.0`.",87],[11,"https","","Change the protocol to HTTPS.",87],[11,"threads","","Set the number of threads to be used in the server task pool.",87],[11,"cache_clean_interval","","Set the minimal number of seconds between each cache clean.",87],[11,"server_name","","Change the server response header. Default is `rustful`.",87],[11,"content_type","","Change the default content type. Default is `text/plain`.",87],[11,"log","","Change log tool. Default is to print to standard output.",87],[11,"with_context_plugin","","Add a context plugin to the plugin stack.",87],[11,"with_response_plugin","","Add a response plugin to the plugin stack.",87],[11,"run","","Start the server.",87],[11,"build","","Build a runnable instance of the server.",87],[11,"handle","","",88],[0,"router","rustful","Routers stores request handlers, using an HTTP method and a path as keys."],[3,"TreeRouter","rustful::router","Stores items, such as request handlers, using an HTTP method and a path as keys."],[6,"RouterResult","",""],[8,"Router","","Routers are used to store request handlers."],[16,"Handler","rustful::router::Router",""],[10,"find","rustful::router","Find and return the matching handler and variable values.",89],[10,"insert","","Insert a new handler into the router.",89],[6,"Handler","",""],[11,"clone","","",90],[11,"new","","Creates an empty `TreeRouter`.",90],[11,"from_routes","","Generates a `TreeRouter` tree from a set of items and paths.",90],[6,"Handler","",""],[11,"find","","",90],[11,"insert","","Inserts an item into the `TreeRouter` at a given path.",90],[11,"insert_router","","Insert an other TreeRouter at a path. The content of the other TreeRouter will be merged with this one.\nContent with the same path and method will be overwritten.",90],[0,"handler","rustful","Request handlers."],[8,"Handler","rustful::handler","A trait for request handlers."],[16,"Cache","rustful::handler::Handler",""],[10,"handle_request","rustful::handler","",91],[6,"Cache","",""],[0,"cache","rustful","Traits and implementations for cached resources."],[3,"CachedFile","rustful::cache","Cached raw file content."],[3,"CachedProcessedFile","","A processed cached file."],[8,"Cache","","A trait for cache storage."],[10,"free_unused","","Free all the unused cached resources.",92],[8,"CachedValue","","This trait provides functions for handling cached resources."],[10,"borrow_current","","Borrow the cached value, without loading or reloading it.",93],[10,"load","","Load the cached value.",93],[10,"free","","Free the cached value.",93],[10,"expired","","Check if the cached value has expired.",93],[10,"unused","","Check if the cached value is unused and should be removed.",93],[11,"borrow","","Reload the cached value if it has expired and borrow it.",93],[11,"clean","","Free the cached value if it's unused.",93],[11,"new","","Creates a new `CachedFile` which will be freed `unused_after` seconds after the latest access.",94],[11,"borrow_current","","",94],[11,"load","","",94],[11,"free","","",94],[11,"expired","","",94],[11,"unused","","",94],[11,"new","","Creates a new `CachedProcessedFile` which will be freed `unused_after` seconds after the latest access.\nThe file will be processed by the provided `processor` function each time it's loaded.",95],[11,"borrow_current","","",95],[11,"load","","",95],[11,"free","","",95],[11,"expired","","",95],[11,"unused","","",95],[0,"context","rustful","Handler context and request body reading extensions."],[3,"Context","rustful::context","A container for things like request data and cache."],[12,"headers","","Headers from the HTTP request.",96],[12,"method","","The HTTP method.",96],[12,"path","","The requested path.",96],[12,"variables","","Route variables.",96],[12,"query","","Query variables from the path.",96],[12,"fragment","","The fragment part of the URL (after #), if provided.",96],[12,"cache","","Resource cache.",96],[12,"log","","Log for notes, errors and warnings.",96],[12,"body_reader","","A reader for the request body.",96],[3,"BodyReader","","A reader for a request body."],[8,"ExtQueryBody","","`BodyReader` extension for reading and parsing a query string."],[10,"read_query_body","","",97],[6,"Target","",""],[11,"deref","","",96],[11,"deref_mut","","",96],[11,"from_request","","",98],[11,"read","","Read the request body.",98],[11,"read_query_body","","Read and parse the request body as a query string.\nThe body will be decoded as UTF-8 and plain '+' characters will be replaced with spaces.",98],[0,"response","rustful","Response writers."],[3,"Response","rustful::response","An interface for setting HTTP status code and response headers, before data gets written to the client."],[3,"ResponseWriter","","An interface for writing to the response body."],[4,"ResponseError","","The result of a response action."],[13,"PluginError","","A response plugin failed.",99],[13,"IoError","","There was an IO error.",99],[4,"ResponseData","",""],[13,"Bytes","","Data in byte form.",100],[13,"ByteSlice","","Data in byte form.",100],[13,"String","","Data in string form.",100],[13,"StringSlice","","Data in string form.",100],[8,"IntoResponseData","","Represents anything that can be turned into `ResponseData`."],[10,"into_response_data","","",101],[11,"clone","","",99],[11,"from_error","","",99],[11,"fmt","","",99],[11,"description","","",99],[11,"cause","","",99],[11,"as_bytes","","Borrow the content as a byte slice.",100],[11,"into_bytes","","Turns the content into a byte vector. Slices are copied.",100],[11,"as_string","","Borrow the content as a string slice if the content is a string.\nReturns an `None` if the content is a byte vector, a byte slice or if the action is `Error`.",100],[11,"into_string","","Extract the contained string or string slice if there is any.\nReturns an `None` if the content is a byte vector, a byte slice or if the action is `Error`.\nSlices are copied.",100],[11,"into_response_data","collections::vec","",102],[11,"into_response_data","collections::string","",26],[11,"into_response_data","rustful::response","",100],[11,"new","","",103],[11,"set_status","","Set HTTP status code. Ok (200) is default.",103],[11,"set_header","","Set a HTTP response header. Date, content type (text/plain) and server is automatically set.",103],[11,"get_header","","Get a HTTP response header if set.",103],[11,"into_writer","","Turn the `Response` into a `ResponseWriter` to allow the response body to be written.",103],[11,"drop","","Writes status code and headers and closes the connection.",103],[11,"send","","Writes response body data to the client.",104],[11,"end","","Finish writing the response and collect eventual errors.",104],[11,"write_all","","",104],[11,"drop","","Finishes writing and closes the connection.",104],[0,"plugin","rustful","Request and context plugins."],[4,"ContextAction","rustful::plugin","The result from a context plugin."],[13,"Continue","","Continue to the next plugin in the stack.",105],[13,"Abort","","Abort and send HTTP status.",105],[4,"ResponseAction","","The result from a `ResponsePlugin`."],[13,"Write","","Continue to the next plugin and maybe write data.",106],[13,"DoNothing","","Do not continue to the next plugin.",106],[13,"Error","","Abort with an error.",106],[8,"ContextPlugin","","A trait for context plugins."],[16,"Cache","rustful::plugin::ContextPlugin",""],[10,"modify","rustful::plugin","Try to modify the `Context`.",107],[8,"ResponsePlugin","","A trait for response plugins."],[10,"begin","","Set or modify headers before they are sent to the client and maybe initiate the body.",108],[10,"write","","Handle content before writing it to the body.",108],[10,"end","","End of body writing. Last chance to add content.",108],[11,"write","","",106],[11,"do_nothing","","",106],[11,"error","","",106],[0,"log","rustful","Log tools."],[3,"StdOut","rustful::log","Log tool for printing to standard output."],[3,"File","","Log tool for printing to a file."],[6,"Result","",""],[8,"Log","","Common trait for log tools."],[10,"try_note","","Print a note to the log or return eventual errors.",109],[10,"try_warning","","Print a warning to the log or return eventual errors.",109],[10,"try_error","","Print an error to the log or return eventual errors.",109],[11,"note","","Print a note to the log and ignore any errors.",109],[11,"warning","","Print a warning to the log and ignore any errors.",109],[11,"error","","Print an error to the log and ignore any errors.",109],[11,"try_note","","",110],[11,"try_warning","","",110],[11,"try_error","","",110],[11,"new","","",111],[11,"try_note","","",111],[11,"try_warning","","",111],[11,"try_error","","",111],[14,"insert_routes!","rustful","The `insert_routes!` macro generates routes from the provided handlers and routing tree and\nadds them to the provided router. The router is then returned."],[14,"content_type!","","A macro for assigning content types."]],"paths":[[3,"Mime"],[4,"TopLevel"],[4,"SubLevel"],[4,"Attr"],[4,"Value"],[4,"Method"],[3,"Request"],[3,"Response"],[3,"Client"],[3,"RequestBuilder"],[4,"Body"],[3,"Url"],[4,"RedirectPolicy"],[3,"OptCell"],[3,"AccessControlAllowHeaders"],[3,"AccessControlAllowMethods"],[4,"AccessControlAllowOrigin"],[3,"AccessControlMaxAge"],[3,"AccessControlRequestHeaders"],[3,"AccessControlRequestMethod"],[3,"Accept"],[3,"AcceptEncoding"],[3,"Language"],[3,"AcceptLanguage"],[3,"Allow"],[3,"Authorization"],[3,"String"],[3,"Basic"],[3,"CacheControl"],[4,"CacheDirective"],[3,"Cookie"],[3,"Connection"],[4,"ConnectionOption"],[3,"ContentLength"],[3,"ContentType"],[3,"Date"],[3,"Etag"],[3,"Expires"],[3,"Host"],[4,"IfMatch"],[3,"LastModified"],[3,"IfModifiedSince"],[4,"IfNoneMatch"],[3,"IfUnmodifiedSince"],[3,"Location"],[4,"Pragma"],[3,"Referer"],[3,"Server"],[3,"SetCookie"],[3,"TransferEncoding"],[3,"Upgrade"],[4,"Protocol"],[3,"UserAgent"],[4,"Vary"],[4,"Encoding"],[3,"EntityTag"],[3,"QualityItem"],[8,"HeaderFormat"],[3,"Box"],[3,"Headers"],[3,"HeadersItems"],[3,"HeaderView"],[3,"Item"],[3,"HeaderFormatter"],[4,"HttpReader"],[4,"HttpWriter"],[3,"RawStatus"],[3,"NetworkConnections"],[8,"NetworkStream"],[4,"HttpListener"],[4,"HttpAcceptor"],[4,"HttpStream"],[3,"HttpConnector"],[3,"Request"],[3,"Response"],[3,"AcceptorPool"],[3,"Sentinel"],[3,"Server"],[3,"Listening"],[4,"StatusCode"],[4,"StatusClass"],[4,"RequestUri"],[4,"HttpVersion"],[4,"HttpError"],[8,"Header"],[8,"Scheme"],[4,"Protocol"],[3,"Server"],[3,"ServerInstance"],[8,"Router"],[3,"TreeRouter"],[8,"Handler"],[8,"Cache"],[8,"CachedValue"],[3,"CachedFile"],[3,"CachedProcessedFile"],[3,"Context"],[8,"ExtQueryBody"],[3,"BodyReader"],[4,"ResponseError"],[4,"ResponseData"],[8,"IntoResponseData"],[3,"Vec"],[3,"Response"],[3,"ResponseWriter"],[4,"ContextAction"],[4,"ResponseAction"],[8,"ContextPlugin"],[8,"ResponsePlugin"],[8,"Log"],[3,"StdOut"],[3,"File"]]};
initSearch(searchIndex);
