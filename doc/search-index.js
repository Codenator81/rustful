var searchIndex = {};
searchIndex['rustful'] = {"items":[[0,"","rustful",""],[0,"router","","`Router` stores items, such as request handlers, using an HTTP method and a path as keys."],[1,"Router","rustful::router","Stores items, such as request handlers, using an HTTP method and a path as keys."],[11,"items","","",0],[11,"static_routes","","",0],[11,"variable_route","","",0],[11,"wildcard_route","","",0],[4,"RouterResult","",""],[10,"clone","","",0],[10,"new","","Creates an empty `Router`.",0],[10,"insert_item","","Inserts an item into the `Router` at a given path.",0],[10,"find","","Finds and returns the matching item and variables",0],[10,"from_routes","","Generates a `Router` tree from a set of items and paths.",0],[10,"insert_router","","Insert an other Router at a path. The content of the other Router will be merged with this one.\nContent with the same path and method will be overwritten.",0],[0,"server","rustful","This module contains the `Server` and various structs and traits for handlers and cache."],[1,"Server","rustful::server",""],[11,"handlers","","A routing tree with response handlers",1],[11,"port","","The port where the server will listen for requests",1],[11,"host","","Host address",1],[11,"server","","",1],[11,"content_type","","",1],[11,"cache","","",1],[11,"cache_clean_interval","","",1],[11,"last_cachel_clean","","",1],[1,"CachedFile","","Cached raw file content."],[11,"path","","",2],[11,"file","","",2],[11,"modified","","",2],[11,"last_accessed","","",2],[11,"unused_after","","",2],[1,"CachedProcessedFile","","A processed cached file."],[11,"path","","",3],[11,"file","","",3],[11,"modified","","",3],[11,"last_accessed","","",3],[11,"unused_after","","",3],[11,"processor","","",3],[6,"Handler","","A trait for request handlers."],[9,"handle_request","","",4],[6,"Cache","","A trait for cache storage."],[9,"free_unused","","Free all the unused cached resources.",5],[6,"CachedValue","","This trait provides functions for handling cached resources."],[9,"use_current_value","","`do_this` with the cached value, without loading or reloading it.",6],[9,"load","","Load the cached value.",6],[9,"free","","Free the cached value.",6],[9,"expired","","Check if the cached value has expired.",6],[9,"unused","","Check if the cached value is unused and should be removed.",6],[10,"use_value","","Reload the cached value if it has expired and `do_this` with it.",6],[10,"clean","","Free the cached value if it's unused.",6],[10,"new","","Create a new `Server` which will listen on the provided port and host address `0.0.0.0`.",1],[10,"with_cache","","Creates a new `Server` with a resource cache.",1],[10,"run","","Start the server and run forever.\nThis will only return if the initial connection fails.",1],[10,"set_host","","Change the host address.",1],[10,"set_clean_interval","","Set the minimal number of seconds between each cache clean.",1],[10,"set_server_name","","Change the server part of the user agent string.",1],[10,"set_content_type","","Change the default content type.",1],[10,"get_config","","",1],[10,"handle_request","","",1],[10,"clone","","",1],[10,"free_unused","collections::vec","",7],[10,"free_unused","std::collections::hashmap","",8],[10,"new","rustful::server","Creates a new `CachedFile` which will be freed `unused_after` seconds after the latest access.",2],[10,"use_current_value","","",2],[10,"load","","",2],[10,"free","","",2],[10,"expired","","",2],[10,"unused","","",2],[10,"new","","Creates a new `CachedProcessedFile` which will be freed `unused_after` seconds after the latest access.\nThe file will be processed by the provided `processor` function each time it's loaded.",3],[10,"use_current_value","","",3],[10,"load","","",3],[10,"free","","",3],[10,"expired","","",3],[10,"unused","","",3],[0,"request","rustful","`Request` is a container for all the request data, including get, set and path variables."],[1,"Request","rustful::request",""],[11,"headers","","Headers from the HTTP request",9],[11,"method","","The HTTP method",9],[11,"path","","The requested path",9],[11,"variables","","Route variables",9],[11,"post","","POST variables",9],[11,"query","","Query variables from the path",9],[11,"fragment","","The fragment part of the URL (after #), if provided",9],[11,"body","","The raw body part of the request",9],[0,"response","rustful","`Response` is an interface for sending HTTP response data to the client."],[1,"Response","rustful::response",""],[11,"headers","","The HTTP response headers. Date, content type (text/plain) and server is automatically set.",10],[11,"status","","The HTTP response status. Ok (200) is default.",10],[11,"writer","","",10],[11,"started_writing","","",10],[10,"new","","",10],[10,"begin","","Start writing the response. Headers and status can not be changed after it has been called.",10],[10,"end","","Finish writing the response.",10],[10,"write","","Writes content to the client. The headers will be written the first time it's called.",10]],"paths":[[1,"Router"],[1,"Server"],[1,"CachedFile"],[1,"CachedProcessedFile"],[6,"Handler"],[6,"Cache"],[6,"CachedValue"],[1,"Vec"],[1,"HashMap"],[1,"Request"],[1,"Response"]]};
initSearch(searchIndex);
